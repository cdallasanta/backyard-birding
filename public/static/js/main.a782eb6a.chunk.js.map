{"version":3,"sources":["images/birdCards sync nonrecursive //.png$","images/birdCards/americanCoot.png","images/birdCards/americanCrow.png","images/birdCards/americanGoldfinch.png","images/birdCards/americanRobin.png","images/birdCards/americanWigeon.png","images/birdCards/annasHummingbird.png","images/birdCards/badNeighbor.png","images/birdCards/bandTailedPigeon.png","images/birdCards/beltedKingfisher.png","images/birdCards/bewicksWren.png","images/birdCards/birdCall.png","images/birdCards/birdCardBack.png","images/birdCards/blackCappedChickadee.png","images/birdCards/bufflehead.png","images/birdCards/bushtit.png","images/birdCards/canadaGoose.png","images/birdCards/darkEyedJunco.png","images/birdCards/doubleCrestedCormorant.png","images/birdCards/gadwall.png","images/birdCards/goldenCrownedSparrow.png","images/birdCards/greatBlueHeron.png","images/birdCards/greenHeron.png","images/birdCards/greenWingedTeal.png","images/birdCards/hoodedMerganser.png","images/birdCards/houseCat.png","images/birdCards/houseFinch.png","images/birdCards/killdeer.png","images/birdCards/mallard.png","images/birdCards/mourningDove.png","images/birdCards/northernFlicker.png","images/birdCards/nutria.png","images/birdCards/peregrineFalcon.png","images/birdCards/piedBilledGrebe.png","images/birdCards/pileatedWoodpecker.png","images/birdCards/redBreastedNuthatch.png","images/birdCards/redWingedBlackbird.png","images/birdCards/rubyCrownedKinglet.png","images/birdCards/rufousHummingbird.png","images/birdCards/songSparrow.png","images/birdCards/spottedTowhee.png","images/birdCards/squirrel.png","images/birdCards/stellersJay.png","images/birdCards/variedThrush.png","images/birdCards/whiteCrownedSparrow.png","images/birdCards/woodDuck.png","images/seasonCards sync nonrecursive //.png$","images/seasonCards/autumn.png","images/seasonCards/seasonCardBack.png","images/seasonCards/spring.png","images/seasonCards/summer.png","images/seasonCards/winter.png","images/backyardCards sync nonrecursive //.png$","images/backyardCards/backyardCardBack.png","images/backyardCards/bushesAndFlowers.png","images/backyardCards/fish.png","images/backyardCards/insects.png","images/backyardCards/lawn.png","images/backyardCards/nuts.png","images/backyardCards/runningWater.png","images/backyardCards/seeds.png","images/backyardCards/trees.png","images/backyardCards/wetland.png","images/backyardCards/wildGrass.png","actions/HandActions.js","images/allImages.js","cards/allSeasonCards.js","components/NewGame.js","actions/FlockActions.js","components/cards/birdCard.js","containers/Flock.js","actions/GameActions.js","components/cards/seasonCard.js","components/cards/CardBack.js","cards/allCardBacks.js","components/Instructions.js","components/Dice.js","actions/PlayerActions.js","containers/Decks.js","components/cards/backyardCard.js","containers/Hand.js","components/Score.js","containers/Backyard.js","containers/PlayerArea.js","containers/Game.js","components/HighScores.js","components/GameOver.js","App.js","serviceWorker.js","reducers/GameReducer.js","reducers/FlockReducer.js","cards/allBirdCards.js","cards/allBackyardCards.js","reducers/DecksReducer.js","reducers/PlayerReducer.js","reducers/PastScoresReducer.js","reducers/rootReducer.js","index.js"],"names":["map","./americanCoot.png","./americanCrow.png","./americanGoldfinch.png","./americanRobin.png","./americanWigeon.png","./annasHummingbird.png","./badNeighbor.png","./bandTailedPigeon.png","./beltedKingfisher.png","./bewicksWren.png","./birdCall.png","./birdCardBack.png","./blackCappedChickadee.png","./bufflehead.png","./bushtit.png","./canadaGoose.png","./darkEyedJunco.png","./doubleCrestedCormorant.png","./gadwall.png","./goldenCrownedSparrow.png","./greatBlueHeron.png","./greenHeron.png","./greenWingedTeal.png","./hoodedMerganser.png","./houseCat.png","./houseFinch.png","./killdeer.png","./mallard.png","./mourningDove.png","./northernFlicker.png","./nutria.png","./peregrineFalcon.png","./piedBilledGrebe.png","./pileatedWoodpecker.png","./redBreastedNuthatch.png","./redWingedBlackbird.png","./rubyCrownedKinglet.png","./rufousHummingbird.png","./songSparrow.png","./spottedTowhee.png","./squirrel.png","./stellersJay.png","./variedThrush.png","./whiteCrownedSparrow.png","./woodDuck.png","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","p","./autumn.png","./seasonCardBack.png","./spring.png","./summer.png","./winter.png","./backyardCardBack.png","./bushesAndFlowers.png","./fish.png","./insects.png","./lawn.png","./nuts.png","./runningWater.png","./seeds.png","./trees.png","./wetland.png","./wildGrass.png","drawBYcard","numToDraw","arguments","length","undefined","dispatch","getState","i","type","newBYcard","decks","backyard","importAll","r","images","item","replace","birds","require","seasons","backyards","seasonCards","name","src","points","spring","summer","winter","autumn","any","colors","NewGame","state","season","playerName","handleChange","_this","setState","defineProperty","target","value","handleSubmit","preventDefault","payload","assign","find","c","props","startGame","history","push","document","body","style","setProperty","this","reset","react_default","a","createElement","onSubmit","onChange","checked","React","Component","connect","num","selectBird","bird","BirdCard","zoomed","zoomCard","handleAnimationEnd","classList","contains","removeBird","selectedBird","birdToRemove","flock","b","concat","_this2","card","alt","className","selected","onContextMenu","onClick","handleClick","onAnimationEnd","game","Flock","renderBirdCards","birdCard","key","gatherBYcards","BYcopy","toConsumableArray","BYcards","passThrough","habitat","forEach","need","matchingCard","by","splice","indexOf","phase","nextPhase","showDice","skip","includes","skipToFlight","player","SeasonCard","CardBack","enabled","cardBacks","phaseInstructions","drawBirds","drawBYcards","playBYcards","chooseBird","attractBird","flightRoll","Instructions","Dice","loaded","sleep","ms","Promise","setTimeout","rollDone","_callee","roll","regenerator_default","wrap","_context","prev","next","checkForSuccess","flightCheck","toggleDice","stop","bonus","setBonus","getElementById","add","scoreBird","selectBirdAgain","remove","_callee3","_context3","_ref3","asyncToGenerator","mark","_callee2","birdElem","_context2","flightNums","Math","random","_x3","apply","react_dice_complete_default","numDice","ref","dice","reactDice","outline","faceColor","dotColor","wholeState","score","Decks","birdDeckEnabled","getAttribute","drawBird","toggleHand","birdDeck","skipBirdDraw","components_Instructions","cards_CardBack","seasonCard","diceVisible","components_Dice","newBird","BackyardCard","Hand","selectedCards","filter","moveTheCards","hand","backyardCard","renderBYcards","cards","Score","Backyard","PlayerArea","handVisible","containers_Hand","containers_Backyard","components_Score","Game","gameOver","then","containers_Decks","containers_Flock","containers_PlayerArea","gameState","gameData","fetch","headers","Content-Type","method","JSON","stringify","HighScores","renderScores","games","getGames","loading","pastScores","resp","json","scores","GameOver","href","components_HighScores","App","react_router_dom","react_router","exact","path","component","Boolean","window","location","hostname","match","phases","initState","GameReducer","action","newPhaseNum","newPhase","FlockReducer","newFlock","birdCards","initBackyardDeck","backyardCards","getOwnPropertyNames","filename","Array","fill","index","shuffle","array","temporaryValue","randomIndex","currentIndex","floor","slice","DecksReducer","PlayerReducer","newSortedHand","sort","newHand","newBY","PastScoresReducer","objectSpread","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4KAAA,IAAAA,EAAA,CACAC,qBAAA,GACAC,qBAAA,GACAC,0BAAA,GACAC,sBAAA,GACAC,uBAAA,GACAC,yBAAA,GACAC,oBAAA,GACAC,yBAAA,GACAC,yBAAA,GACAC,oBAAA,GACAC,iBAAA,GACAC,qBAAA,GACAC,6BAAA,GACAC,mBAAA,GACAC,gBAAA,GACAC,oBAAA,GACAC,sBAAA,GACAC,+BAAA,GACAC,gBAAA,GACAC,6BAAA,GACAC,uBAAA,GACAC,mBAAA,GACAC,wBAAA,GACAC,wBAAA,GACAC,iBAAA,GACAC,mBAAA,GACAC,iBAAA,GACAC,gBAAA,GACAC,qBAAA,GACAC,wBAAA,GACAC,eAAA,GACAC,wBAAA,GACAC,wBAAA,GACAC,2BAAA,GACAC,4BAAA,GACAC,2BAAA,GACAC,2BAAA,GACAC,0BAAA,GACAC,oBAAA,GACAC,sBAAA,GACAC,iBAAA,GACAC,oBAAA,GACAC,qBAAA,GACAC,4BAAA,IACAC,iBAAA,KAIA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAAG,EAAAF,GAEA,SAAAC,EAAAF,GACA,IAAAG,EAAAC,EAAAnD,EAAA+C,GAAA,CACA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAEA,MADAK,EAAAE,KAAA,mBACAF,EAEA,OAAApD,EAAA+C,GAEAD,EAAAS,KAAA,WACA,OAAAC,OAAAD,KAAAvD,IAEA8C,EAAAW,QAAAR,EACAS,EAAAC,QAAAb,EACAA,EAAAE,GAAA,oBClEAU,EAAAC,QAAiBT,EAAAU,EAAuB,0DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,0DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,+DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,2DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,4DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,8DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,yDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,8DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,8DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,yDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,0DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,kECAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,wDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,qDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,yDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,2DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oECAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,qDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,kECAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,4DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,wDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,6DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,6DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,wDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,qDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,0DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,6DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,6DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,6DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,gECAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,iECAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,gECAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,gECAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,+DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,yDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,2DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,yDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,0DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,iECAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxC,IAAA5D,EAAA,CACA6D,eAAA,IACAC,uBAAA,IACAC,eAAA,IACAC,eAAA,IACAC,eAAA,KAIA,SAAAnB,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAAG,EAAAF,GAEA,SAAAC,EAAAF,GACA,IAAAG,EAAAC,EAAAnD,EAAA+C,GAAA,CACA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAEA,MADAK,EAAAE,KAAA,mBACAF,EAEA,OAAApD,EAAA+C,GAEAD,EAAAS,KAAA,WACA,OAAAC,OAAAD,KAAAvD,IAEA8C,EAAAW,QAAAR,EACAS,EAAAC,QAAAb,EACAA,EAAAE,GAAA,qBC1BAU,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,4DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxC,IAAA5D,EAAA,CACAkE,yBAAA,IACAC,yBAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,aAAA,IACAC,aAAA,IACAC,qBAAA,IACAC,cAAA,IACAC,cAAA,IACAC,gBAAA,IACAC,kBAAA,KAIA,SAAA9B,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAAG,EAAAF,GAEA,SAAAC,EAAAF,GACA,IAAAG,EAAAC,EAAAnD,EAAA+C,GAAA,CACA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAEA,MADAK,EAAAE,KAAA,mBACAF,EAEA,OAAApD,EAAA+C,GAEAD,EAAAS,KAAA,WACA,OAAAC,OAAAD,KAAAvD,IAEA8C,EAAAW,QAAAR,EACAS,EAAAC,QAAAb,EACAA,EAAAE,GAAA,qBChCAU,EAAAC,QAAiBT,EAAAU,EAAuB,8DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,8DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,kDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,qDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,kDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,kDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,0DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,mDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,mDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,qDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,4PCAjC,SAASiB,IAA0B,IAAfC,EAAeC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,EACrC,OAAO,SAACG,EAAUC,GAChB,IAAI,IAAIC,EAAE,EAAGA,EAAIN,EAAWM,IAAI,CAE9BF,EAAS,CACPG,KAAM,qBACNC,UAHiBH,IAGKI,MAAMC,SAAS,OCN7C,SAASC,EAAUC,GACjB,IAAIC,EAAS,GAEb,OADAD,EAAEnC,OAAOvD,IAAI,SAAA4F,GAAI,OAAID,EAAOC,EAAKC,QAAQ,KAAM,KAAOH,EAAEE,KACjDD,EAGF,IAAMG,EAAQL,EAAUM,OAClBC,EAAUP,EAAUM,QACpBE,EAAYR,EAAUM,QCNtBG,EAAc,CACzB,CAAElD,GAAI,EAAGmD,KAAK,SAAUC,IAAKJ,EAAQ,cAAeK,OAAQ,CAC1DC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,EACRC,IAAK,IAEP,CAAE1D,GAAI,EAAGmD,KAAK,SAAUC,IAAKJ,EAAQ,cAAeK,OAAQ,CAC1DE,OAAQ,EACRD,OAAQ,EACRG,OAAQ,EACRD,OAAQ,EACRE,IAAK,IAEP,CAAE1D,GAAI,EAAGmD,KAAK,SAAUC,IAAKJ,EAAQ,cAAeK,OAAQ,CAC1DI,OAAQ,EACRD,OAAQ,EACRD,OAAQ,EACRD,OAAQ,EACRI,IAAK,IAEP,CAAE1D,GAAI,EAAGmD,KAAK,SAAUC,IAAKJ,EAAQ,cAAeK,OAAQ,CAC1DG,OAAQ,EACRC,OAAQ,EACRH,OAAQ,EACRC,OAAQ,EACRG,IAAK,KCvBHC,UAAS,CACbL,OAAQ,eACRC,OAAQ,QACRE,OAAQ,YACRD,OAAQ,cAGJI,6MACJC,MAAQ,CACNC,OAAQ,SACRC,WAAY,MAOdC,aAAe,SAAA5D,GACb6D,EAAKC,SAAL1D,OAAA2D,EAAA,EAAA3D,CAAA,GACGJ,EAAEgE,OAAOjB,KAAO/C,EAAEgE,OAAOC,WAI9BC,aAAe,SAAAlE,GACbA,EAAEmE,iBACF,IAAMC,EAAUhE,OAAOiE,OAAO,GAAIR,EAAKJ,MAAO,CAACC,OAAQZ,EAAYwB,KAAK,SAAAC,GAAC,OAAIA,EAAExB,OAASc,EAAKJ,MAAMC,WAEnGG,EAAKW,MAAMC,UAAUL,GACrBP,EAAKW,MAAME,QAAQC,KAAK,SAExBC,SAASC,KAAKC,MAAMC,YAAY,iBAAkBxB,EAAOM,EAAKJ,MAAMC,SACpEG,EAAKW,MAAM/C,WAAW,uFAjBtBuD,KAAKR,MAAMS,yCAqBX,OACEC,EAAAC,EAAAC,cAAA,OAAKxF,GAAG,WACNsF,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA,QAAMC,SAAUL,KAAKd,cACnBgB,EAAAC,EAAAC,cAAA,2BACeF,EAAAC,EAAAC,cAAA,SAAOnD,KAAK,OAAOc,KAAK,aAAakB,MAAOe,KAAKvB,MAAME,WAAY2B,SAAUN,KAAKpB,gBAEjGsB,EAAAC,EAAAC,cAAA,4BAEEF,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,SAAOnD,KAAK,QAAQc,KAAK,SAASwC,QAA+B,WAAtBP,KAAKvB,MAAMC,OAAqBO,MAAM,SAASqB,SAAUN,KAAKpB,eAAhH,UACAsB,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,SAAOnD,KAAK,QAAQc,KAAK,SAASwC,QAA+B,WAAtBP,KAAKvB,MAAMC,OAAqBO,MAAM,SAASqB,SAAUN,KAAKpB,eAAhH,UACAsB,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,SAAOnD,KAAK,QAAQc,KAAK,SAASwC,QAA+B,WAAtBP,KAAKvB,MAAMC,OAAqBO,MAAM,SAASqB,SAAUN,KAAKpB,eAAhH,UACAsB,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,SAAOnD,KAAK,QAAQc,KAAK,SAASwC,QAA+B,WAAtBP,KAAKvB,MAAMC,OAAqBO,MAAM,SAASqB,SAAUN,KAAKpB,eAAhH,WAGFsB,EAAAC,EAAAC,cAAA,SAAOnD,KAAK,SAASgC,MAAM,wBA3CfuB,IAAMC,WA0DbC,cAAQ,KARI,SAAA5D,GACzB,MAAO,CACL2C,UAAW,SAAAL,GAAO,OAAItC,EAAS,CAACG,KAAM,aAAcmC,aACpD3C,WAAY,SAAAkE,GAAG,OAAI7D,EAASL,EAAWkE,KACvCV,MAAO,kBAAMnD,EAAS,CAACG,KAAK,kBAIjByD,CAAkClC,gBCvD1C,SAASoC,EAAWC,GACzB,MAAO,CACL5D,KAAM,cACN4D,YCdEC,6MACJrC,MAAQ,CACNsC,QAAQ,KAGVC,SAAW,SAAAhG,GACTA,EAAEmE,iBACFN,EAAKC,SAAS,CAACiC,QAASlC,EAAKJ,MAAMsC,YAGrCE,mBAAqB,SAAAjG,GACnB,GAAIA,EAAEgE,OAAOkC,UAAUC,SAAS,cAC9BtC,EAAKW,MAAM4B,WAAWvC,EAAKW,MAAM6B,mBAC5B,GAAIrG,EAAEgE,OAAOkC,UAAUC,SAAS,WAAY,CACjD,IAAMG,EAAezC,EAAKW,MAAM+B,MAAMjC,KAAK,SAAAkC,GAAC,MAAI,QAAAC,OAAQD,EAAE5G,MAASI,EAAEgE,OAAOpE,KAC5EiE,EAAKW,MAAM4B,WAAWE,6EAIlB,IAAAI,EAAA1B,KACN,OACEE,EAAAC,EAAAC,cAAA,OACEpC,IAAKgC,KAAKR,MAAMmC,KAAK3D,IACrB4D,IAAK5B,KAAKR,MAAMmC,KAAK5D,KACrB8D,UAAS,YAAAJ,OAAczB,KAAKvB,MAAMsC,OAAS,UAAY,IAA9CU,OAAmDzB,KAAKR,MAAMsC,SAAW,YAAc,IAChGC,cAAe/B,KAAKgB,SACpBgB,QAAS,SAAAhH,GAAC,OAAI0G,EAAKlC,MAAMyC,YAAYjH,EAAG0G,EAAKlC,MAAMmC,OACnDO,eAAgBlC,KAAKiB,mBACrBrG,GAAE,QAAA6G,OAAUzB,KAAKR,MAAMmC,KAAK/G,aA5Bb4F,IAAMC,WA+CdC,cAbS,SAAAjC,GACtB,MAAO,CACL4C,aAAc5C,EAAM0D,KAAKd,aACzBE,MAAO9C,EAAM8C,QAIU,SAAAzE,GACzB,MAAO,CACLsE,WAAY,SAAAP,GAAI,OAAI/D,EDpCjB,SAAoB+D,GACzB,MAAO,CAAC5D,KAAM,cAAe4D,QCmCEO,CAAWP,OAI7BH,CAA6CI,OC9CtDsB,6MAqBJC,gBAAkB,WAChB,OAAOxD,EAAKW,MAAM+B,MAAM3J,IAAI,SAACiJ,EAAM7D,GACjC,OAAOkD,EAAAC,EAAAC,cAACkC,EAAD,CAAUX,KAAMd,EAAM0B,IAAM1B,EAAKjG,GAAIqH,YAAapD,EAAKoD,YAAaH,SAAUjD,EAAKW,MAAM6B,eAAiBR,SAIrH2B,cAAgB,SAAA3B,GAId,IAAM4B,EAAMrH,OAAAsH,EAAA,EAAAtH,CAAOyD,EAAKW,MAAMpC,UACxBuF,EAAU,GAEZC,EAAc,WAChB/B,EAAKgC,QAAQC,QAAQ,SAAAC,GACnB,IAAIC,EAAeP,EAAOnD,KAAK,SAAA2D,GAAE,OAAIA,EAAGhG,OAAS8F,IAC5CC,GACHL,EAAQhD,KAAK8C,EAAOS,OAAOT,EAAOU,QAAQH,GAAe,GAAG,OAQlE,OAHAJ,IACID,EAAQ/F,OAAS,GAAIgG,IAElBD,KAGTV,YAAc,SAACjH,EAAG6F,GACbhC,EAAK2D,cAAc3B,GAAMjE,OAAS,IACV,eAArBiC,EAAKW,MAAM4D,OACbvE,EAAKW,MAAMoB,WAAWC,GACtBhC,EAAKW,MAAM6D,YACXxE,EAAKW,MAAM8D,YACmB,gBAArBzE,EAAKW,MAAM4D,OACpBvE,EAAKW,MAAMoB,WAAWC,yFAvDR,IAAAa,EAAA1B,KAClB,GAAwB,eAArBA,KAAKR,MAAM4D,MAAuB,CAEnC,IAAIG,GAAO,EAEXvD,KAAKR,MAAM+B,MAAMuB,QAAQ,SAAAjC,GACvBa,EAAKlC,MAAMpC,SAAS0F,QAAQ,SAAAG,GACtBpC,EAAKgC,QAAQW,SAASP,EAAGhG,QAC3BsG,GAAO,OAKVA,IACDvD,KAAKR,MAAMiE,eACXzD,KAAKR,MAAM8D,8CA8Cf,OACEpD,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,sBAAsBjH,GAAG,SACrCoF,KAAKqC,0BAhEM7B,IAAMC,WAwFXC,cAlBS,SAAAjC,GACtB,MAAO,CACL8C,MAAO9C,EAAM8C,MACb6B,MAAO3E,EAAM0D,KAAKiB,MAClBhG,SAAUqB,EAAMiF,OAAOtG,SACvBiE,aAAc5C,EAAM0D,KAAKd,eAIF,SAAAvE,GACzB,MAAO,CACL8D,WAAY,SAAAC,GAAI,OAAI/D,EAAS8D,EAAWC,KACxCwC,UAAW,kBAAMvG,ECvFZ,CAACG,KAAM,gBDwFZwG,aAAc,kBAAM3G,EChFf,CAACG,KAAM,YAAamG,MAAO,KDiFhCE,SAAU,kBAAMxG,ECjEX,CAACG,KAAM,iBDqEDyD,CAA6C0B,4BErF7CuB,EANI,SAAAnE,GACjB,OACEU,EAAAC,EAAAC,cAAA,OAAKpC,IAAKwB,EAAMmC,KAAK3D,IAAK4D,IAAKpC,EAAMmC,KAAK5D,KAAM8D,UAAU,aAAajH,GAAG,gBCY/DgJ,EAdE,SAAApE,GACf,OACEU,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,QACb3B,EAAAC,EAAAC,cAAA,OACEpC,IAAKwB,EAAMmC,KAAK3D,IAChB4D,IAAKpC,EAAMmC,KAAK5D,KAChBA,KAAMyB,EAAMmC,KAAK5D,KACjB8D,UAAS,qBAAAJ,OAAuBjC,EAAMqE,QAAU,GAAK,aACrD7B,QAASxC,EAAMyC,gBCTV6B,EAAY,CACvBjD,KAAM,CAAC7C,IAAKN,EAAM,oBAAqBK,KAAK,YAC5CX,SAAU,CAACY,IAAKH,EAAU,wBAAyBE,KAAK,iBCF1D,IAAMgG,EAAoB,CACxBC,UAAW,kBACXC,YAAa,sBACbC,YAAa,wBACbC,WAAY,2BACZC,YAAa,2BACbC,WAAY,oCAaCC,EAVM,SAAA9E,GACnB,OACEU,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,eAAejH,GAAG,gBAC/BsF,EAAAC,EAAAC,cAAA,SACG2D,EAAkBvE,EAAM4D,2BCJ3BmB,qNACJ9F,MAAQ,CACN+F,QAAQ,KAGVC,MAAQ,SAAAC,GACN,OAAO,IAAIC,QAAQ,SAAAtJ,GAAO,OAAIuJ,WAAWvJ,EAASqJ,QAIpDG,+CAAW,SAAAC,EAAMC,GAAN,OAAAC,EAAA7E,EAAA8E,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACJvG,EAAKJ,MAAM+F,OADP,CAAAU,EAAAE,KAAA,QAEPvG,EAAKC,SAAS,CAAC0F,QAAQ,IAFhBU,EAAAE,KAAA,mBAIiB,gBAArBvG,EAAKW,MAAM4D,MAJP,CAAA8B,EAAAE,KAAA,QAKLvG,EAAKwG,gBAAgBN,GALhBG,EAAAE,KAAA,mBAMyB,eAArBvG,EAAKW,MAAM4D,MANf,CAAA8B,EAAAE,KAAA,gBAOLvG,EAAKyG,YAAYP,GAPZG,EAAAE,KAAA,GAQCvG,EAAK4F,MAAM,KARZ,QASL5F,EAAKW,MAAM+F,aACX1G,EAAKW,MAAM6D,YAVN,yBAAA6B,EAAAM,SAAAV,8DAeXO,gBAAkB,SAAAN,GAChB,IAAMpC,EAAU9D,EAAK2D,gBACfiD,EAAQ5G,EAAK6G,SAAS/C,GACtBhB,EAAO/B,SAAS+F,eAAT,QAAAlE,OAAgC5C,EAAKW,MAAM6B,aAAazG,KAEzD,IAATmK,GACDpD,EAAKT,UAAU0E,IAAI,cACnB/G,EAAKW,MAAMqG,UAAUhH,EAAKW,MAAM6B,aAAcsB,GAC9C9D,EAAKW,MAAMsG,mBACHf,GAAQ,EAAEU,GAClB9D,EAAKT,UAAU0E,IAAI,cACnB/G,EAAKW,MAAMqG,UAAUhH,EAAKW,MAAM6B,aAAcsB,GAC9C9D,EAAKW,MAAM6D,cAEX1B,EAAKT,UAAU6E,OAAO,YACtBlH,EAAKW,MAAMoB,WAAW,MACtB/B,EAAKW,MAAM6D,gBAIfb,cAAgB,WAId,IAAMC,EAAMrH,OAAAsH,EAAA,EAAAtH,CAAOyD,EAAKW,MAAMpC,UACxBuF,EAAU,GAEZC,EAAc,WAChB/D,EAAKW,MAAM6B,aAAawB,QAAQC,QAAQ,SAAAC,GACtC,IAAIC,EAAeP,EAAOnD,KAAK,SAAA2D,GAAE,OAAIA,EAAGhG,OAAS8F,IAC5CC,GACHL,EAAQhD,KAAK8C,EAAOS,OAAOT,EAAOU,QAAQH,GAAe,GAAG,OAQlE,OAHAJ,IACID,EAAQ/F,OAAS,GAAIgG,IAElBD,KAGT+C,SAAW,SAAA/C,GACT,OAAuB,IAAnBA,EAAQ/F,OACH,EACE+F,EAAQ,GAAG1F,OAAS0F,EAAQ,GAAG1F,KACjC,EAEA,KAIXqI,kDAAc,SAAAU,EAAMjB,GAAN,OAAAC,EAAA7E,EAAA8E,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OACZvG,EAAKW,MAAM+B,MAAMuB,QAAjB,eAAAoD,EAAA9K,OAAA+K,EAAA,EAAA/K,CAAA4J,EAAA7E,EAAAiG,KAAyB,SAAAC,EAAMxF,GAAN,IAAAyF,EAAA,OAAAtB,EAAA7E,EAAA8E,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,WACnBvE,EAAK2F,WAAWhD,SAASuB,GADN,CAAAwB,EAAAnB,KAAA,eAAAmB,EAAAnB,KAAA,EAEfvG,EAAK4F,MAAM,KAFI,QAGf6B,EAAW1G,SAAS+F,eAAT,QAAAlE,OAAgCZ,EAAKjG,MAC7CkF,MAAMC,YAAY,gBAA3B,GAAA0B,OAA6D,IAAdgF,KAAKC,SAAe,IAAnE,MACAJ,EAASpF,UAAU0E,IAAI,WALF,wBAAAW,EAAAf,SAAAa,MAAzB,gBAAAM,GAAA,OAAAT,EAAAU,MAAA5G,KAAArD,YAAA,IADY,wBAAAsJ,EAAAT,SAAAQ,oIAWL,IAAAtE,EAAA1B,KACP,OACEE,EAAAC,EAAAC,cAAA,OAAKxF,GAAG,QACNsF,EAAAC,EAAAC,cAACyG,EAAA1G,EAAD,CACE2G,QAAS,EACTjC,SAAU7E,KAAK6E,SACfkC,IAAK,SAAAC,GAAI,OAAItF,EAAKuF,UAAYD,GAC9BE,SAAS,EACTC,UAAU,OACVC,SAAS,iBAjGA5G,IAAMC,YA2HVC,cAnBS,SAAAjC,GACtB,MAAO,CACL4C,aAAc5C,EAAM0D,KAAKd,aACzBjE,SAAUqB,EAAMiF,OAAOtG,SACvBgG,MAAO3E,EAAM0D,KAAKiB,MAClB7B,MAAO9C,EAAM8C,QAIU,SAAAzE,GACzB,MAAO,CACLuG,UAAW,kBAAMvG,EL7HZ,CAACG,KAAM,gBK8HZ6I,gBAAiB,kBAAMhJ,EL1HlB,CAACG,KAAM,YAAamG,MAAO,KK2HhCmC,WAAY,kBAAMzI,EL3Gb,CAACG,KAAM,iBK4GZ4I,UAAW,SAAChF,EAAM8B,GAAP,OAAmB7F,ECzH3B,SAAmB+D,EAAM8B,GAC9B,OAAO,SAAC7F,EAAUC,GAChB,IAAMsK,EAAatK,IACnBD,EAAS,CACPG,KAAM,aACNmC,QAAS,CACPyB,OACA8B,UACA2E,MAAOD,EAAWlF,KAAKzD,OAAOT,OAAO4C,EAAKnC,YDiHPmH,CAAUhF,EAAM8B,KACvD/B,WAAY,SAAAC,GAAI,OAAI/D,EAAS8D,EAAWC,OAI7BH,CAA6C6D,GEzHtDgD,6MACJ9I,MAAQ,CACN+I,iBAAiB,KAGnB/C,MAAQ,SAAAC,GACN,OAAO,IAAIC,QAAQ,SAAAtJ,GAAO,OAAIuJ,WAAWvJ,EAASqJ,QAcpDzC,kDAAc,SAAA6C,EAAO9J,GAAP,OAAAgK,EAAA7E,EAAA8E,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACkB,cAA1BvG,EAAKW,MAAM2C,KAAKiB,OAA2D,aAAlCpI,EAAEgE,OAAOyI,aAAa,QADvD,CAAAvC,EAAAE,KAAA,eAEVvG,EAAKW,MAAMkI,WAFDxC,EAAAE,KAAA,EAGJvG,EAAK4F,MAAM,KAHP,OAIV5F,EAAKW,MAAMkI,WACmB,cAA1B7I,EAAKW,MAAM2C,KAAKiB,OAClBvE,EAAKW,MAAM6D,YANH6B,EAAAE,KAAA,eAQyB,gBAA1BvG,EAAKW,MAAM2C,KAAKiB,OAA6D,iBAAlCpI,EAAEgE,OAAOyI,aAAa,UAC1E5I,EAAKW,MAAMmI,aACX9I,EAAKW,MAAM/C,aACXoC,EAAKW,MAAM/C,aACXoC,EAAKW,MAAM6D,aAZD,wBAAA6B,EAAAM,SAAAV,8DAiBdD,SAAW,iGA3BqB,cAA1B7E,KAAKR,MAAM2C,KAAKiB,OACkB,IAA/BpD,KAAKR,MAAMoI,SAAShL,QACpBoD,KAAKvB,MAAM+I,gBAChBxH,KAAKlB,SAAS,CAAC0I,iBAAkB,IACE,cAA1BxH,KAAKR,MAAM2C,KAAKiB,OACW,IAA/BpD,KAAKR,MAAMoI,SAAShL,QACzBoD,KAAKR,MAAMqI,gDAyBP,IAAAnG,EAAA1B,KACN,OACEE,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,sBAAsBjH,GAAG,SACtCsF,EAAAC,EAAAC,cAAC0H,EAAD,CAAc1E,MAAOpD,KAAKR,MAAM2C,KAAKiB,QACrClD,EAAAC,EAAAC,cAAC2H,EAAD,CACEpG,KAAMmC,EAAUjD,KAChBoB,YAAajC,KAAKiC,YAClB4B,QAAS7D,KAAKvB,MAAM+I,kBAEtBtH,EAAAC,EAAAC,cAAC4H,EAAD,CAAYrG,KAAM7D,EAAYwB,KAAK,SAAAC,GAAC,OAAIA,EAAE3E,KAAO8G,EAAKlC,MAAM2C,KAAKzD,OAAO9D,OACxEsF,EAAAC,EAAAC,cAAC2H,EAAD,CACEpG,KAAMmC,EAAU1G,SAChB6E,YAAajC,KAAKiC,YAClB4B,SAAS,IAEV7D,KAAKR,MAAM2C,KAAK8F,YAAc/H,EAAAC,EAAAC,cAAC8H,EAAD,CAAMrD,SAAU7E,KAAK6E,WAAe,aAxDvDrE,IAAMC,WAgFXC,cAlBS,SAAAjC,GACtB,MAAO,CACL0D,KAAM1D,EAAM0D,KACZZ,MAAO9C,EAAM8C,MACbqG,SAAUnJ,EAAMtB,MAAM0D,OAIC,SAAA/D,GACzB,MAAO,CACL4K,SAAU,kBAAM5K,EVpFX,SAACA,EAAUC,GAChB,IAAMsK,EAAatK,IACfsK,EAAWlK,MAAM0D,KAAKjE,OAAS,GACjCE,EAAS,CACPG,KAAM,YACNkL,QAASd,EAAWlK,MAAM0D,KAAK,QUgFnCwC,UAAW,kBAAMvG,EPrFZ,CAACG,KAAM,gBOsFZR,WAAY,kBAAMK,EAASL,MAC3BkL,WAAY,kBAAM7K,EDvFb,CAACG,KAAK,iBCwFX4K,aAAc,kBAAM/K,EP5Ef,CAACG,KAAM,YAAamG,MAAO,OOgFrB1C,CAA6C6G,GC/E7Ca,EAXM,SAAA5I,GACnB,OACEU,EAAAC,EAAAC,cAAA,OACEpC,IAAKwB,EAAMmC,KAAK3D,IAChB4D,IAAI,WACJC,UAAU,OACVG,QAAS,SAAAhH,GAAC,OAAIwE,EAAMyC,YAAYjH,EAAGwE,EAAMmC,UCFzC0G,6MACJ5J,MAAQ,CACN6J,cAAe,MAGjBrG,YAAc,SAACjH,EAAG2G,GAEb9C,EAAKJ,MAAM6J,cAAc9E,SAAS7B,IACnC3G,EAAEgE,OAAOkC,UAAU6E,OAAO,YAC1BlH,EAAKC,SAAS,CACZwJ,cAAclN,OAAAsH,EAAA,EAAAtH,CAAKyD,EAAKJ,MAAM6J,cAAcC,OAAO,SAAAhJ,GAAC,OAAIA,IAAMoC,SAIhE3G,EAAEgE,OAAOkC,UAAU0E,IAAI,YACvB/G,EAAKC,SAAS,CACZwJ,cAAa,GAAA7G,OAAArG,OAAAsH,EAAA,EAAAtH,CAAMyD,EAAKJ,MAAM6J,eAAjB,CAAgC3G,KAC5C,WAEuC,IAApC9C,EAAKJ,MAAM6J,cAAc1L,QAC3BiC,EAAK2J,qBAMbA,aAAe,WACb3J,EAAKW,MAAM0E,YAAYrF,EAAKJ,MAAM6J,eAClCzJ,EAAKC,SAAS,CACZwJ,cAAe,KAGjB1I,SAAS+F,eAAe,QAAQzE,UAAU0E,IAAI,gBAGhD3E,mBAAqB,SAAAjG,GACfA,EAAEgE,OAAOkC,UAAUC,SAAS,eAC9BnG,EAAEgE,OAAOkC,UAAU6E,OAAO,aAC1BlH,EAAKW,MAAMmI,aACX9I,EAAKW,MAAM6D,6FAIA,IAAA3B,EAAA1B,KACb,OAAOA,KAAKR,MAAMiJ,KAAK7Q,IAAI,SAAC+J,EAAM3E,GAChC,OAAOkD,EAAAC,EAAAC,cAACsI,EAAD,CAAc/G,KAAMA,EAAMY,IAAMvF,EAAGiF,YAAaP,EAAKO,iDAK9D,OACE/B,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,OAAOjH,GAAG,OAAOsH,eAAgBlC,KAAKiB,oBAClDjB,KAAK2I,wBApDKnI,IAAMC,WAsEVC,cAZS,SAAAjC,GACtB,MAAO,CAACgK,KAAMhK,EAAMiF,OAAO+E,OAGF,SAAA3L,GACzB,MAAO,CACLoH,YAAa,SAAA0E,GAAK,OAAI9L,EHnEnB,SAAqB8L,GAC1B,MAAO,CAAC3L,KAAK,sBAAuB2L,SGkEH1E,CAAY0E,KAC3CjB,WAAY,kBAAM7K,EHvEb,CAACG,KAAK,iBGwEXoG,UAAW,kBAAMvG,ETxEZ,CAACG,KAAM,kBS4EDyD,CAA6C2H,GCnE7CQ,EARD,SAAArJ,GACZ,OACEU,EAAAC,EAAAC,cAAA,KAAGxF,GAAG,SAAN,UACU4E,EAAM8H,QCDdwB,6MAEJ7G,YAAc,4FAEC,IAAAP,EAAA1B,KACb,OAAOA,KAAKR,MAAMpC,SAASxF,IAAI,SAAC+J,EAAM3E,GACpC,OAAOkD,EAAAC,EAAAC,cAACsI,EAAD,CAAc/G,KAAMA,EAAMY,IAAMvF,EAAGiF,YAAaP,EAAKO,iDAK9D,OACE/B,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,WAAWjH,GAAG,YAC1BoF,KAAK2I,wBAbSnI,IAAMC,WA0BdC,cAPS,SAAAjC,GACtB,MAAO,CACLiF,OAAQjF,EAAMiF,OACdtG,SAAUqB,EAAMiF,OAAOtG,WAIZsD,CAAyBoI,GCvBlCC,mLAEF,OACE7I,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,sBAAsBjH,GAAG,cACrCoF,KAAKR,MAAMwJ,YAAc9I,EAAAC,EAAAC,cAAC6I,EAAD,MAAW,KACrC/I,EAAAC,EAAAC,cAAC8I,EAAD,MACAhJ,EAAAC,EAAAC,cAAC+I,EAAD,CAAO7B,MAAOtH,KAAKR,MAAM8H,gBANR9G,IAAMC,WAyBhBC,cAbS,SAAAjC,GACtB,MAAO,CACLuK,YAAavK,EAAMiF,OAAOsF,YAC1B1B,MAAO7I,EAAMiF,OAAO4D,QAIG,SAAAxK,GACzB,MAAO,CACL6K,WAAY,kBAAM7K,EN3Bb,CAACG,KAAK,mBM+BAyD,CAA6CqI,GCxBtDK,uMACgB,IAAAvK,EAAAmB,KACiB,IAA/BA,KAAKR,MAAMoI,SAAShL,QACW,IAA5BoD,KAAKR,MAAM+B,MAAM3E,QAEtBoD,KAAKR,MAAM6J,WACRC,KAAK,kBAAMzK,EAAKW,MAAME,QAAQC,KAAK,iDAKxC,OACEO,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmJ,EAAD,MACArJ,EAAAC,EAAAC,cAACoJ,EAAD,MACAtJ,EAAAC,EAAAC,cAACqJ,EAAD,cAfWjJ,IAAMC,YAsCVC,eAhBS,SAAAjC,GACtB,MAAO,CACL0D,KAAM1D,EAAM0D,KACZyF,SAAUnJ,EAAMtB,MAAM0D,KACtBzD,SAAUqB,EAAMiF,OAAOtG,SACvBmE,MAAO9C,EAAM8C,QAIU,SAAAzE,GACzB,MAAO,CACLwG,SAAU,kBAAMxG,EbhBX,CAACG,KAAM,eaiBZoM,SAAU,kBAAMvM,EbJX,SAACA,EAAUC,GAEhB,IAAM2M,EAAY3M,IACZ4M,EAAW,CACfjG,OAAQgG,EAAUhG,OAAO/E,WACzB2I,MAAOoC,EAAUhG,OAAO4D,MACxB5I,OAAQgL,EAAUvH,KAAKzD,OAAOX,MAGhC,OAAO6L,MAAM,kCAAmC,CAC9CC,QAAS,CACPC,eAAgB,oBAElBC,OAAQ,OACRlK,KAAMmK,KAAKC,UAAUN,UaNZjJ,CAA6C0I,GCzCtDc,sNAKJC,aAAe,WACb,OAAOtL,EAAKW,MAAM4K,MAAMxS,IAAI,SAAAuK,GAC1B,OACEjC,EAAAC,EAAAC,cAAA,MAAImC,IAAKJ,EAAKvH,IAAKsF,EAAAC,EAAAC,cAAA,cAAS+B,EAAKuB,QAAjC,OAAsDvB,EAAKzD,OAA3D,OAAuEyD,EAAKmF,6FANhFtH,KAAKR,MAAM6K,4CAYX,OAAIrK,KAAKR,MAAM8K,QAAgB,4BAE7BpK,EAAAC,EAAAC,cAAA,OAAKxF,GAAG,UACNsF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,UACGJ,KAAKmK,wBAnBS3J,IAAMC,YAqChBC,eAXS,SAAAjC,GACtB,MAAO,CACL2L,MAAO3L,EAAM8L,WAAWH,MACxBE,QAAS7L,EAAM8L,WAAWD,UAIH,SAAAxN,GACzB,MAAO,CAACuN,SAAU,kBAAMvN,EdVjB,SAAAA,GACLA,EAAS,CAACG,KAAK,mBACf2M,MAAM,yCACHN,KAAK,SAAAkB,GAAI,OAAIA,EAAKC,SAClBnB,KAAK,SAAAoB,GAAM,OAAI5N,EAAS,CAACG,KAAK,aAAcmC,QAASsL,WcS7ChK,CAA6CwJ,ICtCtDS,oLAEF,OACEzK,EAAAC,EAAAC,cAAA,OAAKxF,GAAG,YACNsF,EAAAC,EAAAC,cAAA,wBADF,eAEeJ,KAAKR,MAAM8H,MAF1B,WAEwCpH,EAAAC,EAAAC,cAAA,WACtCF,EAAAC,EAAAC,cAAA,KAAGwK,KAAK,KAAR,eACA1K,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACyK,GAAD,cARerK,IAAMC,WAoBdC,eANS,SAAAjC,GACtB,MAAO,CACL6I,MAAO7I,EAAMiF,OAAO4D,QAIT5G,CAAyBiK,ICDzBG,oLAbX,OACE5K,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,OACb3B,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,KACE7K,EAAAC,EAAAC,cAAC4K,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW3M,IACjC0B,EAAAC,EAAAC,cAAC4K,EAAA,EAAD,CAAOE,KAAK,QAAQC,UAAW/B,KAC/BlJ,EAAAC,EAAAC,cAAC4K,EAAA,EAAD,CAAOE,KAAK,aAAaC,UAAWR,KACpCzK,EAAAC,EAAAC,cAAC4K,EAAA,EAAD,CAAOE,KAAK,eAAeC,UAAWjB,cAR9B1J,IAAMC,WCIJ2K,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,wEClBAC,GAAS,CAAC,YAAa,cAAe,cAAe,aAAc,cAAe,cAElFC,GAAY,CAChBhN,OAAQ,GACR0E,MAAOqI,GAAO,GACdpK,aAAc,KACd4G,aAAa,GA0BA0D,OAvBf,WAA+C,IAA1BlN,EAA0B9B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlB+O,GAAWE,EAAOjP,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7C,OAAO+O,EAAO3O,MACZ,IAAK,aACH,OAAO7B,OAAOiE,OAAO,GAAIZ,EAAOmN,EAAOxM,SACzC,IAAK,aACH,IAAIyM,EAAcJ,GAAOtI,QAAQ1E,EAAM2E,OAAS,EAAI,EAAI,EAAGqI,GAAOtI,QAAQ1E,EAAM2E,OAAS,EACrF0I,EAAWL,GAAOI,GACtB,OAAOzQ,OAAOiE,OAAO,GAAIZ,EAAO,CAAC2E,MAAO0I,IAC1C,IAAK,cACH,OAAO1Q,OAAOiE,OAAO,GAAIZ,EAAO,CAAC4C,aAAcuK,EAAO/K,OACxD,IAAK,cACH,OAAOzF,OAAOiE,OAAO,GAAIZ,EAAO,CAACwJ,aAAcxJ,EAAMwJ,cACvD,IAAK,YACH,OAAO7M,OAAOiE,OAAO,GAAIZ,EAAO,CAACwJ,aAAa,IAChD,IAAK,YACH,OAAO7M,OAAOiE,OAAO,GAAIZ,EAAO,CAAC2E,MAAOqI,GAAOG,EAAOxI,SACxD,IAAK,aACH,OAAOsI,GACT,QACE,OAAOjN,ICZEsN,OAhBf,WAAyC,IAAnBtN,EAAmB9B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAX,GAAIiP,EAAOjP,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvC,OAAO+O,EAAO3O,MACZ,IAAK,YAEH,SAAAwE,OAAArG,OAAAsH,EAAA,EAAAtH,CAAWqD,GAAX,CAAkBmN,EAAOzD,UAC3B,IAAK,cACH,IAAM6D,EAAQ5Q,OAAAsH,EAAA,EAAAtH,CAAOqD,GAErB,OADAuN,EAAS9I,OAAOzE,EAAM0E,QAAQyI,EAAO/K,MAAM,GACpCmL,EACT,IAAK,aACD,MAAO,GACX,QACE,OAAOvN,ICVAwN,GAAY,CACvB,CAAErR,GAAI,EAAGoD,IAAKN,EAAM,oBAAqBK,KAAM,gBAAiByI,WAAY,CAAC,EAAG,GAAI9H,OAAQ,SAAUmE,QAAS,CAAC,UAAW,cAC3H,CAAEjI,GAAI,EAAGoD,IAAKN,EAAM,oBAAqBK,KAAM,gBAAiByI,WAAY,CAAC,EAAG,GAAI9H,OAAQ,MAAOmE,QAAS,CAAC,OAAQ,SACrH,CAAEjI,GAAI,EAAGoD,IAAKN,EAAM,yBAA0BK,KAAM,qBAAsByI,WAAY,CAAC,EAAG,GAAI9H,OAAQ,SAAUmE,QAAS,CAAC,QAAS,UACnI,CAAEjI,GAAI,EAAGoD,IAAKN,EAAM,qBAAsBK,KAAM,iBAAkByI,WAAY,CAAC,EAAG,GAAI9H,OAAQ,SAAUmE,QAAS,CAAC,UAAW,SAC7H,CAAEjI,GAAI,EAAGoD,IAAKN,EAAM,sBAAuBK,KAAM,kBAAmByI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,SAAUmE,QAAS,CAAC,eAAgB,cACnI,CAAEjI,GAAI,EAAGoD,IAAKN,EAAM,wBAAyBK,KAAM,qBAAsByI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,MAAOmE,QAAS,CAAC,QAAS,qBAC9H,CAAEjI,GAAI,EAAGoD,IAAKN,EAAM,wBAAyBK,KAAM,qBAAsByI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,SAAUmE,QAAS,CAAC,QAAS,SACjI,CAAEjI,GAAI,EAAGoD,IAAKN,EAAM,wBAAyBK,KAAM,oBAAqByI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,SAAUmE,QAAS,CAAC,OAAQ,YAC/H,CAAEjI,GAAI,EAAGoD,IAAKN,EAAM,mBAAoBK,KAAM,gBAAiByI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,SAAUmE,QAAS,CAAC,QAAS,UACvH,CAAEjI,GAAI,EAAGoD,IAAKN,EAAM,mBAAoBK,KAAM,gBAAiByI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,SAAUmE,QAAS,CAAC,QAAS,UACvH,CAAEjI,GAAI,GAAIoD,IAAKN,EAAM,4BAA6BK,KAAM,yBAA0ByI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,MAAOmE,QAAS,CAAC,OAAQ,UACtI,CAAEjI,GAAI,GAAIoD,IAAKN,EAAM,kBAAmBK,KAAM,aAAcyI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,SAAUmE,QAAS,CAAC,eAAgB,cAC3H,CAAEjI,GAAI,GAAIoD,IAAKN,EAAM,eAAgBK,KAAM,UAAWyI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,SAAUmE,QAAS,CAAC,UAAW,UAChH,CAAEjI,GAAI,GAAIoD,IAAKN,EAAM,mBAAoBK,KAAM,eAAgByI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,MAAOmE,QAAS,CAAC,UAAW,YACtH,CAAEjI,GAAI,GAAIoD,IAAKN,EAAM,qBAAsBK,KAAM,kBAAmByI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,MAAOmE,QAAS,CAAC,QAAS,qBACzH,CAAEjI,GAAI,GAAIoD,IAAKN,EAAM,8BAA+BK,KAAM,2BAA4ByI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,SAAUmE,QAAS,CAAC,OAAQ,YAC7I,CAAEjI,GAAI,GAAIoD,IAAKN,EAAM,eAAgBK,KAAM,UAAWyI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,SAAUmE,QAAS,CAAC,eAAgB,cACrH,CAAEjI,GAAI,GAAIoD,IAAKN,EAAM,4BAA6BK,KAAM,yBAA0ByI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,SAAUmE,QAAS,CAAC,QAAS,qBAC1I,CAAEjI,GAAI,GAAIoD,IAAKN,EAAM,sBAAuBK,KAAM,mBAAoByI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,SAAUmE,QAAS,CAAC,OAAQ,YAC7H,CAAEjI,GAAI,GAAIoD,IAAKN,EAAM,kBAAmBK,KAAM,cAAeyI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,SAAUmE,QAAS,CAAC,OAAQ,iBACpH,CAAEjI,GAAI,GAAIoD,IAAKN,EAAM,uBAAwBK,KAAM,oBAAqByI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,SAAUmE,QAAS,CAAC,eAAgB,cACvI,CAAEjI,GAAI,GAAIoD,IAAKN,EAAM,uBAAwBK,KAAM,mBAAoByI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,SAAUmE,QAAS,CAAC,eAAgB,SACtI,CAAEjI,GAAI,GAAIoD,IAAKN,EAAM,kBAAmBK,KAAM,cAAeyI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,SAAUmE,QAAS,CAAC,OAAQ,qBACpH,CAAEjI,GAAI,GAAIoD,IAAKN,EAAM,gBAAiBK,KAAM,WAAYyI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,SAAUmE,QAAS,CAAC,UAAW,SAClH,CAAEjI,GAAI,GAAIoD,IAAKN,EAAM,eAAgBK,KAAM,UAAWyI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,MAAOmE,QAAS,CAAC,UAAW,cAC7G,CAAEjI,GAAI,GAAIoD,IAAKN,EAAM,oBAAqBK,KAAM,gBAAiByI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,SAAUmE,QAAS,CAAC,OAAQ,SACxH,CAAEjI,GAAI,GAAIoD,IAAKN,EAAM,uBAAwBK,KAAM,mBAAoByI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,SAAUmE,QAAS,CAAC,UAAW,SACjI,CAAEjI,GAAI,GAAIoD,IAAKN,EAAM,uBAAwBK,KAAM,oBAAqByI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,SAAUmE,QAAS,CAAC,OAAQ,iBAC/H,CAAEjI,GAAI,GAAIoD,IAAKN,EAAM,0BAA2BK,KAAM,sBAAuByI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,SAAUmE,QAAS,CAAC,UAAW,UACvI,CAAEjI,GAAI,GAAIoD,IAAKN,EAAM,2BAA4BK,KAAM,wBAAyByI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,SAAUmE,QAAS,CAAC,OAAQ,UACvI,CAAEjI,GAAI,GAAIoD,IAAKN,EAAM,0BAA2BK,KAAM,uBAAwByI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,SAAUmE,QAAS,CAAC,UAAW,YACxI,CAAEjI,GAAI,GAAIoD,IAAKN,EAAM,0BAA2BK,KAAM,uBAAwByI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,SAAUmE,QAAS,CAAC,UAAW,UACxI,CAAEjI,GAAI,GAAIoD,IAAKN,EAAM,yBAA0BK,KAAM,qBAAsByI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,SAAUmE,QAAS,CAAC,QAAS,qBACnI,CAAEjI,GAAI,GAAIoD,IAAKN,EAAM,mBAAoBK,KAAM,eAAgByI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,MAAOmE,QAAS,CAAC,QAAS,qBACpH,CAAEjI,GAAI,GAAIoD,IAAKN,EAAM,qBAAsBK,KAAM,iBAAkByI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,SAAUmE,QAAS,CAAC,QAAS,qBAC3H,CAAEjI,GAAI,GAAIoD,IAAKN,EAAM,mBAAoBK,KAAM,gBAAiByI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,MAAOmE,QAAS,CAAC,OAAQ,SACpH,CAAEjI,GAAI,GAAIoD,IAAKN,EAAM,oBAAqBK,KAAM,gBAAiByI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,SAAUmE,QAAS,CAAC,QAAS,SACzH,CAAEjI,GAAI,GAAIoD,IAAKN,EAAM,2BAA4BK,KAAM,wBAAyByI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,SAAUmE,QAAS,CAAC,QAAS,qBACxI,CAAEjI,GAAI,GAAIoD,IAAKN,EAAM,gBAAiBK,KAAM,YAAayI,WAAY,CAAC,EAAE,GAAI9H,OAAQ,SAAUmE,QAAS,CAAC,UAAW,sBCvC9GhF,EAAU,wBAEjB,IAOWqO,GAPLC,GAAgB/Q,OAAOgR,oBAAoBvO,GAAWjG,IAAI,SAACyU,EAAUrP,GACzE,MAAO,CACLgB,IAAKH,EAAUwO,GACfpP,KAAMoP,EAAS5O,QAAQ,OAAO,OAOlCyO,GAAmB,IAAII,MAAM,IAC7B,IAAI,IAAItP,GAAI,EAAGA,GAAI,GAAIA,KACrBkP,GAAiBK,KAAKJ,GAAcnP,IAAM,EAAFA,GAAW,GAALA,GAAE,IAIlDkP,GAAiBpJ,QAAQ,SAASnB,EAAM6K,GACtCxM,KAAKwM,GAASpR,OAAOiE,OAAO,GAAIsC,EAAM,CAAC/G,GAAI4R,KAC1CN,IChBH,IAAIO,GAAU,SAAUC,GAMvB,IAJA,IACIC,EAAgBC,EADhBC,EAAeH,EAAM9P,OAIlB,IAAMiQ,GAEZD,EAAcnG,KAAKqG,MAAMrG,KAAKC,SAAWmG,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGtB,OAAOD,GAIFhB,GAAY,CACjB7K,KAAM4L,GAAQrR,OAAAsH,EAAA,EAAAtH,CAAI6Q,KAAYc,MAAM,EAAE,GACrC3P,SAAUqP,GAAQrR,OAAAsH,EAAA,EAAAtH,CAAI8Q,MAkBTc,OAff,WAAgD,IAA1BvO,EAA0B9B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlB+O,GAC5B,QAD8C/O,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAChCI,MACZ,IAAK,YAEH,OAAO7B,OAAOiE,OAAO,GAAIZ,EAAO,CAACoC,KAAMpC,EAAMoC,KAAKkM,MAAM,KAC5D,IAAK,qBAEH,OAAO3R,OAAOiE,OAAO,GAAIZ,EAAO,CAACrB,SAAUqB,EAAMrB,SAAS2P,MAAM,KAClE,IAAK,aACJ,OAAOrB,GACN,QACE,OAAOjN,IC3CPiN,GAAY,CAChB/M,WAAY,iBACZ2I,MAAO,EACPmB,KAAM,GACNrL,SAAU,GACV4L,aAAa,GAoDAiE,OAjDf,WAAiD,IAA1BxO,EAA0B9B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlB+O,GAAWE,EAAOjP,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAO+O,EAAO3O,MACZ,IAAK,aACH,OAAO7B,OAAOiE,OACZ,GACAZ,EACA,CAACE,WAAYiN,EAAOxM,QAAQT,aAGhC,IAAK,qBAEH,IAAMuO,EAAgB,GAAAzL,OAAArG,OAAAsH,EAAA,EAAAtH,CAAIqD,EAAMgK,MAAV,CAAgBmD,EAAO1O,YAAWiQ,KAAK,SAAChN,EAAEqB,GAAH,OAASrB,EAAEvF,GAAG4G,EAAE5G,KAE7E,OAAOQ,OAAOiE,OACZ,GACAZ,EACA,CAACgK,KAAMyE,IAGX,IAAK,cACH,OAAO9R,OAAOiE,OAAO,GAAIZ,EAAO,CAACuK,aAAcvK,EAAMuK,cAEvD,IAAK,sBAEH,IAAMoE,EAAU3O,EAAMgK,KAAKF,OAAO,SAAAhJ,GAAC,OAAIA,EAAE3E,KAAOgR,EAAOhD,MAAM,GAAGhO,IAAM2E,EAAE3E,KAAOgR,EAAOhD,MAAM,GAAGhO,KAE/F,OAAOQ,OAAOiE,OAAO,GAAIZ,EAAO,CAC9BrB,SAAU,GAAAqE,OAAArG,OAAAsH,EAAA,EAAAtH,CAAIqD,EAAMrB,UAAVhC,OAAAsH,EAAA,EAAAtH,CAAuBwQ,EAAOhD,QAAOuE,KAAK,SAAChN,EAAEqB,GAAH,OAASrB,EAAEvF,GAAG4G,EAAE5G,KACpE6N,KAAM2E,IAGV,IAAK,aACH,IAAMC,EAAQ5O,EAAMrB,SAIpB,OAHAwO,EAAOxM,QAAQuD,QAAQG,QAAQ,SAAAG,GAC7BoK,EAAMnK,OAAOmK,EAAMlK,QAAQF,GAAI,KAE1B7H,OAAOiE,OACZ,GACAZ,EACA,CAAC6I,MAAO7I,EAAM6I,MAAQsE,EAAOxM,QAAQkI,OACrC,CAAClK,SAAUiQ,IAEf,IAAK,aACH,OAAO3B,GACT,QACE,OAAOjN,aCvCE6O,OAdf,WAGU,IAHiB7O,EAGjB9B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAHyB,CACjC2N,SAAS,EACTF,MAAO,IACNwB,EAAOjP,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACR,OAAO+O,EAAO3O,MACZ,IAAK,iBACH,OAAO7B,OAAAmS,GAAA,EAAAnS,CAAA,GAAIqD,EAAX,CAAkB6L,SAAS,IAC7B,IAAK,aACH,MAAO,CAACA,SAAS,EAAOF,MAAOwB,EAAOxM,SACxC,QACE,OAAOX,ICKE+O,GARKC,aAAgB,CAClCtL,KAAMwJ,GACNpK,MAAOwK,GACP5O,MAAO6P,GACPtJ,OAAQuJ,GACR1C,WAAY+C,cCHRI,GAAQC,aAAYH,GAAaI,aAAgBC,OAEvDC,IAASC,OAAO7N,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CAAUN,MAAOA,IAAQxN,EAAAC,EAAAC,cAAC6N,GAAD,OAAoBrO,SAAS+F,eAAe,STsH/E,kBAAmBuI,WACrBA,UAAUC,cAAcC,MAAM9E,KAAK,SAAA+E,GACjCA,EAAaC","file":"static/js/main.a782eb6a.chunk.js","sourcesContent":["var map = {\n\t\"./americanCoot.png\": 57,\n\t\"./americanCrow.png\": 58,\n\t\"./americanGoldfinch.png\": 59,\n\t\"./americanRobin.png\": 60,\n\t\"./americanWigeon.png\": 61,\n\t\"./annasHummingbird.png\": 62,\n\t\"./badNeighbor.png\": 63,\n\t\"./bandTailedPigeon.png\": 64,\n\t\"./beltedKingfisher.png\": 65,\n\t\"./bewicksWren.png\": 66,\n\t\"./birdCall.png\": 67,\n\t\"./birdCardBack.png\": 68,\n\t\"./blackCappedChickadee.png\": 69,\n\t\"./bufflehead.png\": 70,\n\t\"./bushtit.png\": 71,\n\t\"./canadaGoose.png\": 72,\n\t\"./darkEyedJunco.png\": 73,\n\t\"./doubleCrestedCormorant.png\": 74,\n\t\"./gadwall.png\": 75,\n\t\"./goldenCrownedSparrow.png\": 76,\n\t\"./greatBlueHeron.png\": 77,\n\t\"./greenHeron.png\": 78,\n\t\"./greenWingedTeal.png\": 79,\n\t\"./hoodedMerganser.png\": 80,\n\t\"./houseCat.png\": 81,\n\t\"./houseFinch.png\": 82,\n\t\"./killdeer.png\": 83,\n\t\"./mallard.png\": 84,\n\t\"./mourningDove.png\": 85,\n\t\"./northernFlicker.png\": 86,\n\t\"./nutria.png\": 87,\n\t\"./peregrineFalcon.png\": 88,\n\t\"./piedBilledGrebe.png\": 89,\n\t\"./pileatedWoodpecker.png\": 90,\n\t\"./redBreastedNuthatch.png\": 91,\n\t\"./redWingedBlackbird.png\": 92,\n\t\"./rubyCrownedKinglet.png\": 93,\n\t\"./rufousHummingbird.png\": 94,\n\t\"./songSparrow.png\": 95,\n\t\"./spottedTowhee.png\": 96,\n\t\"./squirrel.png\": 97,\n\t\"./stellersJay.png\": 98,\n\t\"./variedThrush.png\": 99,\n\t\"./whiteCrownedSparrow.png\": 100,\n\t\"./woodDuck.png\": 101\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 56;","module.exports = __webpack_public_path__ + \"static/media/americanCoot.c1357fdd.png\";","module.exports = __webpack_public_path__ + \"static/media/americanCrow.68fa83cf.png\";","module.exports = __webpack_public_path__ + \"static/media/americanGoldfinch.38e64953.png\";","module.exports = __webpack_public_path__ + \"static/media/americanRobin.2081ca66.png\";","module.exports = __webpack_public_path__ + \"static/media/americanWigeon.7741e030.png\";","module.exports = __webpack_public_path__ + \"static/media/annasHummingbird.43f50c62.png\";","module.exports = __webpack_public_path__ + \"static/media/badNeighbor.a4beef76.png\";","module.exports = __webpack_public_path__ + \"static/media/bandTailedPigeon.1ed9c9b7.png\";","module.exports = __webpack_public_path__ + \"static/media/beltedKingfisher.811027fc.png\";","module.exports = __webpack_public_path__ + \"static/media/bewicksWren.2d9ec898.png\";","module.exports = __webpack_public_path__ + \"static/media/birdCall.dee99ca5.png\";","module.exports = __webpack_public_path__ + \"static/media/birdCardBack.88cde9e1.png\";","module.exports = __webpack_public_path__ + \"static/media/blackCappedChickadee.1c4229ab.png\";","module.exports = __webpack_public_path__ + \"static/media/bufflehead.cd6cadae.png\";","module.exports = __webpack_public_path__ + \"static/media/bushtit.bca78c34.png\";","module.exports = __webpack_public_path__ + \"static/media/canadaGoose.fd4ae569.png\";","module.exports = __webpack_public_path__ + \"static/media/darkEyedJunco.5b2f824f.png\";","module.exports = __webpack_public_path__ + \"static/media/doubleCrestedCormorant.a282fab2.png\";","module.exports = __webpack_public_path__ + \"static/media/gadwall.fae606db.png\";","module.exports = __webpack_public_path__ + \"static/media/goldenCrownedSparrow.7de5f1d3.png\";","module.exports = __webpack_public_path__ + \"static/media/greatBlueHeron.da693a38.png\";","module.exports = __webpack_public_path__ + \"static/media/greenHeron.86ef2506.png\";","module.exports = __webpack_public_path__ + \"static/media/greenWingedTeal.65d3d8c8.png\";","module.exports = __webpack_public_path__ + \"static/media/hoodedMerganser.192905b9.png\";","module.exports = __webpack_public_path__ + \"static/media/houseCat.03d7ff83.png\";","module.exports = __webpack_public_path__ + \"static/media/houseFinch.031bf294.png\";","module.exports = __webpack_public_path__ + \"static/media/killdeer.40aab9d7.png\";","module.exports = __webpack_public_path__ + \"static/media/mallard.dcd0f125.png\";","module.exports = __webpack_public_path__ + \"static/media/mourningDove.6ff9fdfe.png\";","module.exports = __webpack_public_path__ + \"static/media/northernFlicker.8fbf7ba2.png\";","module.exports = __webpack_public_path__ + \"static/media/nutria.91e6f822.png\";","module.exports = __webpack_public_path__ + \"static/media/peregrineFalcon.d9566f18.png\";","module.exports = __webpack_public_path__ + \"static/media/piedBilledGrebe.c4cfb93d.png\";","module.exports = __webpack_public_path__ + \"static/media/pileatedWoodpecker.251cc71a.png\";","module.exports = __webpack_public_path__ + \"static/media/redBreastedNuthatch.a6c03d64.png\";","module.exports = __webpack_public_path__ + \"static/media/redWingedBlackbird.a7597ce4.png\";","module.exports = __webpack_public_path__ + \"static/media/rubyCrownedKinglet.d0d19a86.png\";","module.exports = __webpack_public_path__ + \"static/media/rufousHummingbird.8e214267.png\";","module.exports = __webpack_public_path__ + \"static/media/songSparrow.8c7244aa.png\";","module.exports = __webpack_public_path__ + \"static/media/spottedTowhee.c413163d.png\";","module.exports = __webpack_public_path__ + \"static/media/squirrel.ef7fd357.png\";","module.exports = __webpack_public_path__ + \"static/media/stellersJay.880f5b31.png\";","module.exports = __webpack_public_path__ + \"static/media/variedThrush.78e94f58.png\";","module.exports = __webpack_public_path__ + \"static/media/whiteCrownedSparrow.88e260a8.png\";","module.exports = __webpack_public_path__ + \"static/media/woodDuck.b160ff25.png\";","var map = {\n\t\"./autumn.png\": 103,\n\t\"./seasonCardBack.png\": 104,\n\t\"./spring.png\": 105,\n\t\"./summer.png\": 106,\n\t\"./winter.png\": 107\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 102;","module.exports = __webpack_public_path__ + \"static/media/autumn.1d4bde36.png\";","module.exports = __webpack_public_path__ + \"static/media/seasonCardBack.d6f5cf4e.png\";","module.exports = __webpack_public_path__ + \"static/media/spring.b36729c1.png\";","module.exports = __webpack_public_path__ + \"static/media/summer.4e7eea2a.png\";","module.exports = __webpack_public_path__ + \"static/media/winter.c689654f.png\";","var map = {\n\t\"./backyardCardBack.png\": 109,\n\t\"./bushesAndFlowers.png\": 110,\n\t\"./fish.png\": 111,\n\t\"./insects.png\": 112,\n\t\"./lawn.png\": 113,\n\t\"./nuts.png\": 114,\n\t\"./runningWater.png\": 115,\n\t\"./seeds.png\": 116,\n\t\"./trees.png\": 117,\n\t\"./wetland.png\": 118,\n\t\"./wildGrass.png\": 119\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 108;","module.exports = __webpack_public_path__ + \"static/media/backyardCardBack.eb203c04.png\";","module.exports = __webpack_public_path__ + \"static/media/bushesAndFlowers.2d56c920.png\";","module.exports = __webpack_public_path__ + \"static/media/fish.65989b51.png\";","module.exports = __webpack_public_path__ + \"static/media/insects.f94ba718.png\";","module.exports = __webpack_public_path__ + \"static/media/lawn.6f76af0d.png\";","module.exports = __webpack_public_path__ + \"static/media/nuts.bf02412b.png\";","module.exports = __webpack_public_path__ + \"static/media/runningWater.47e0e314.png\";","module.exports = __webpack_public_path__ + \"static/media/seeds.20974639.png\";","module.exports = __webpack_public_path__ + \"static/media/trees.e193a3cf.png\";","module.exports = __webpack_public_path__ + \"static/media/wetland.7c37ba04.png\";","module.exports = __webpack_public_path__ + \"static/media/wildGrass.225f52c1.png\";","export function drawBYcard(numToDraw = 1) {\r\n  return (dispatch, getState) => {\r\n    for(let i=0; i < numToDraw; i++){\r\n      const wholeState = getState();\r\n      dispatch({\r\n        type: \"DRAW_BACKYARD_CARD\",\r\n        newBYcard: wholeState.decks.backyard[0]\r\n      });\r\n    }\r\n  };\r\n}","function importAll(r) {\r\n  let images = {};\r\n  r.keys().map(item => images[item.replace('./', '')] = r(item));\r\n  return images;\r\n}\r\n\r\nexport const birds = importAll(require.context('./birdCards', false, /\\.png$/));\r\nexport const seasons = importAll(require.context('./seasonCards', false, /\\.png$/));\r\nexport const backyards = importAll(require.context('./backyardCards', false, /\\.png$/));","import {seasons} from '../images/allImages';\r\n\r\nexport const seasonCards = [\r\n  { id: 1, name:\"spring\", src: seasons[\"spring.png\"], points: {\r\n    spring: 4,\r\n    summer: 3,\r\n    winter: 2,\r\n    autumn: 1,\r\n    any: 2\r\n  }},\r\n  { id: 2, name:\"summer\", src: seasons[\"summer.png\"], points: {\r\n    summer: 4,\r\n    spring: 3,\r\n    autumn: 2,\r\n    winter: 1,\r\n    any: 2\r\n  }},\r\n  { id: 3, name:\"autumn\", src: seasons[\"autumn.png\"], points: {\r\n    autumn: 4,\r\n    winter: 3,\r\n    summer: 2,\r\n    spring: 1,\r\n    any: 2\r\n  }},\r\n  { id: 4, name:\"winter\", src: seasons[\"winter.png\"], points: {\r\n    winter: 4,\r\n    autumn: 3,\r\n    spring: 2,\r\n    summer: 1,\r\n    any: 2\r\n  }}\r\n]","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { drawBYcard } from '../actions/HandActions';\r\nimport { seasonCards } from '../cards/allSeasonCards'\r\nimport './newGame.css'\r\n\r\nconst colors = {\r\n  spring: \"darkseagreen\",\r\n  summer: \"khaki\",\r\n  autumn: \"burlywood\",\r\n  winter: \"lightblue\"\r\n}\r\n\r\nclass NewGame extends React.Component {\r\n  state = {\r\n    season: \"spring\",\r\n    playerName: \"\"\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.reset()\r\n  }\r\n\r\n  handleChange = e =>{\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const payload = Object.assign({}, this.state, {season: seasonCards.find(c => c.name === this.state.season)})\r\n\r\n    this.props.startGame(payload);\r\n    this.props.history.push('/game');\r\n\r\n    document.body.style.setProperty(\"--season-color\", colors[this.state.season]);\r\n    this.props.drawBYcard(3);\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div id=\"newGame\">\r\n        <h1>Welcome to Backyard Birding!</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n            Player Name: <input type=\"text\" name=\"playerName\" value={this.state.playerName} onChange={this.handleChange} />\r\n          </div>\r\n          <div>\r\n            Select season:\r\n            <label><input type=\"radio\" name=\"season\" checked={this.state.season === \"spring\"} value=\"spring\" onChange={this.handleChange} />Spring</label>\r\n            <label><input type=\"radio\" name=\"season\" checked={this.state.season === \"summer\"} value=\"summer\" onChange={this.handleChange} />Summer</label>\r\n            <label><input type=\"radio\" name=\"season\" checked={this.state.season === \"autumn\"} value=\"autumn\" onChange={this.handleChange} />Autumn</label>\r\n            <label><input type=\"radio\" name=\"season\" checked={this.state.season === \"winter\"} value=\"winter\" onChange={this.handleChange} />Winter</label>\r\n          </div>\r\n\r\n          <input type=\"submit\" value=\"Start Game\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    startGame: payload => dispatch({type: \"START_GAME\", payload}),\r\n    drawBYcard: num => dispatch(drawBYcard(num)),\r\n    reset: () => dispatch({type:\"RESET_GAME\"})\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(NewGame);","export function drawBird() {\r\n  return (dispatch, getState) => {\r\n    const wholeState = getState();\r\n    if (wholeState.decks.bird.length > 0) {\r\n      dispatch({\r\n        type: \"DRAW_BIRD\",\r\n        newBird: wholeState.decks.bird[0]\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nexport function removeBird(bird){\r\n  return {type: \"REMOVE_BIRD\", bird}\r\n}\r\n\r\nexport function selectBird(bird) {\r\n  return {\r\n    type: \"SELECT_BIRD\",\r\n    bird\r\n  }\r\n}","import React from 'react';\r\nimport './cards.css'\r\nimport { removeBird } from '../../actions/FlockActions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass BirdCard extends React.Component {\r\n  state = {\r\n    zoomed: false\r\n  }\r\n\r\n  zoomCard = e => {\r\n    e.preventDefault();\r\n    this.setState({zoomed: !this.state.zoomed})\r\n  }\r\n\r\n  handleAnimationEnd = e => {\r\n    if (e.target.classList.contains(\"flyToScore\")){\r\n      this.props.removeBird(this.props.selectedBird);\r\n    } else if (e.target.classList.contains(\"flyAway\")) {\r\n      const birdToRemove = this.props.flock.find(b => `bird-${b.id}` === e.target.id);\r\n      this.props.removeBird(birdToRemove);\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <img\r\n        src={this.props.card.src}\r\n        alt={this.props.card.name}\r\n        className={`card bird${this.state.zoomed ? \" zoomed\" : \"\"}${this.props.selected ? \" selected\" : \"\"}`}\r\n        onContextMenu={this.zoomCard}\r\n        onClick={e => this.props.handleClick(e, this.props.card)} \r\n        onAnimationEnd={this.handleAnimationEnd}\r\n        id={`bird-${this.props.card.id}`}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    selectedBird: state.game.selectedBird,\r\n    flock: state.flock\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    removeBird: bird => dispatch(removeBird(bird))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BirdCard);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport BirdCard from '../components/cards/birdCard';\r\nimport { selectBird } from '../actions/FlockActions';\r\nimport { nextPhase, showDice, skipToFlight } from '../actions/GameActions';\r\n\r\nclass Flock extends React.Component {\r\n  componentDidUpdate(){\r\n    if(this.props.phase === \"chooseBird\"){\r\n      // check if there are available birds, and if there are none, set phase to flight\r\n      let skip = true;\r\n\r\n      this.props.flock.forEach(bird => {\r\n        this.props.backyard.forEach(by => {\r\n          if (bird.habitat.includes(by.type)){\r\n            skip = false;\r\n          }\r\n        })\r\n      })\r\n\r\n      if(skip){\r\n        this.props.skipToFlight();\r\n        this.props.showDice();\r\n      }\r\n    }\r\n  }\r\n\r\n  renderBirdCards = () => {\r\n    return this.props.flock.map((bird, i) => {\r\n      return <BirdCard card={bird} key ={bird.id} handleClick={this.handleClick} selected={this.props.selectedBird === bird} />\r\n    })\r\n  }\r\n\r\n  gatherBYcards = bird => {\r\n    // checks the backyard for the first card that matches the bird's need\r\n    // if there are undefined values, pass through again looking for a second copy of the first need\r\n    // the filter removes 'undefined' from the array when no backyard card matches the need\r\n    const BYcopy = [...this.props.backyard]\r\n    const BYcards = []\r\n    \r\n    let passThrough = () => {\r\n      bird.habitat.forEach(need =>{\r\n        let matchingCard = BYcopy.find(by => by.type === need)\r\n        if(!!matchingCard){\r\n          BYcards.push(BYcopy.splice(BYcopy.indexOf(matchingCard), 1)[0])\r\n        }\r\n      })\r\n    }\r\n\r\n    passThrough();\r\n    if (BYcards.length < 2) {passThrough()}\r\n\r\n    return BYcards;\r\n  }\r\n\r\n  handleClick = (e, bird) => {\r\n    if(this.gatherBYcards(bird).length > 0){\r\n      if (this.props.phase === \"chooseBird\") {\r\n        this.props.selectBird(bird);\r\n        this.props.nextPhase();\r\n        this.props.showDice();\r\n      } else if (this.props.phase === \"attractBird\") {\r\n        this.props.selectBird(bird);\r\n      }\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"top-level-container\" id=\"flock\">\r\n        {this.renderBirdCards()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    flock: state.flock,\r\n    phase: state.game.phase,\r\n    backyard: state.player.backyard,\r\n    selectedBird: state.game.selectedBird\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    selectBird: bird => dispatch(selectBird(bird)),\r\n    nextPhase: () => dispatch(nextPhase()),\r\n    skipToFlight: () => dispatch(skipToFlight()),\r\n    showDice: () => dispatch(showDice())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Flock);","export function nextPhase() {\r\n  return {type: \"NEXT_PHASE\"}\r\n}\r\n\r\nexport function selectBirdAgain(){\r\n  return {type: \"SET_PHASE\", phase: 3}\r\n}\r\n\r\nexport function skipToFlight(){\r\n  return {type: \"SET_PHASE\", phase: 5}\r\n}\r\n\r\nexport function skipBirdDraw(){\r\n  return {type: \"SET_PHASE\", phase: 1}\r\n}\r\n\r\nexport function selectCard(card) {\r\n  return {type: \"SELECT_CARD\", card}\r\n}\r\n\r\nexport function toggleDice() {\r\n  return {type: \"TOGGLE_DICE\"}\r\n}\r\n\r\nexport function showDice() {\r\n  return {type: \"SHOW_DICE\"}\r\n}\r\n\r\nexport function getGames() {\r\n  return dispatch => {\r\n    dispatch({type:\"LOADING_SCORES\"})\r\n    fetch('http://localhost:3001/api/high_scores')\r\n      .then(resp => resp.json())\r\n      .then(scores => dispatch({type:\"SET_SCORES\", payload: scores}))\r\n  }\r\n}\r\n\r\nexport function gameOver(){\r\n  return (dispatch, getState) => {\r\n    // post the game\r\n    const gameState = getState();\r\n    const gameData = {\r\n      player: gameState.player.playerName,\r\n      score: gameState.player.score,\r\n      season: gameState.game.season.name\r\n    }\r\n\r\n    return fetch('http://localhost:3001/api/games', {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: 'POST',\r\n      body: JSON.stringify(gameData)\r\n    })\r\n  }\r\n}","import React from 'react';\r\nimport './cards.css'\r\n\r\nconst SeasonCard = props => {\r\n  return(\r\n    <img src={props.card.src} alt={props.card.name} className=\"seasonCard\" id=\"seasonCard\" />\r\n  );\r\n}\r\n\r\nexport default SeasonCard;","import React from 'react';\r\nimport './cards.css'\r\n\r\nconst CardBack = props => {\r\n  return(\r\n    <div className=\"deck\">\r\n      <img\r\n        src={props.card.src}\r\n        alt={props.card.name}\r\n        name={props.card.name}\r\n        className={`card bird cardBack${props.enabled ? \"\" : \" disabled\"}`}\r\n        onClick={props.handleClick}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardBack;","import {backyards, birds } from '../images/allImages';\r\n\r\nexport const cardBacks = {\r\n  bird: {src: birds[\"birdCardBack.png\"], name:\"birdDeck\"},\r\n  backyard: {src: backyards[\"backyardCardBack.png\"], name:\"backyardDeck\"}\r\n};","import React from 'react';\r\n\r\nconst phaseInstructions = {\r\n  drawBirds: \"Draw Bird Cards\",\r\n  drawBYcards: \"Draw Backyard Cards\",\r\n  playBYcards: \"Play 2 Backyard Cards\",\r\n  chooseBird: \"Choose a bird to attract\",\r\n  attractBird: \"Roll to attract the bird\",\r\n  flightRoll: \"Roll to see which birds fly away\"\r\n};\r\n  \r\nconst Instructions = props => {\r\n  return(\r\n    <div className=\"instructions\" id=\"instructions\">\r\n      <p>\r\n        {phaseInstructions[props.phase]}\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Instructions","import React from 'react';\r\nimport ReactDice from 'react-dice-complete';\r\nimport { connect } from 'react-redux';\r\nimport 'react-dice-complete/dist/react-dice-complete.css';\r\nimport { nextPhase, selectBirdAgain, toggleDice } from '../actions/GameActions';\r\nimport { scoreBird } from '../actions/PlayerActions';\r\nimport { selectBird } from '../actions/FlockActions';\r\n\r\n// this is based off of react-dice by Adam Taylor, found here:\r\n// https://github.com/AdamTyler/react-dice-complete/blob/master/src/Die.js\r\n\r\nclass Dice extends React.Component {\r\n  state = {\r\n    loaded: false\r\n  }\r\n\r\n  sleep = ms => {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n\r\n  //this gets around the rollDone function running once it renders\r\n  rollDone = async roll => {\r\n    if (!this.state.loaded){\r\n      this.setState({loaded: true});\r\n    } else {\r\n      if(this.props.phase === \"attractBird\"){\r\n        this.checkForSuccess(roll);\r\n      } else if (this.props.phase === \"flightRoll\") {\r\n        this.flightCheck(roll);\r\n        await this.sleep(1000);\r\n        this.props.toggleDice();\r\n        this.props.nextPhase();\r\n      }\r\n    }\r\n  }\r\n\r\n  checkForSuccess = roll => {\r\n    const BYcards = this.gatherBYcards();\r\n    const bonus = this.setBonus(BYcards);\r\n    const card = document.getElementById(`bird-${this.props.selectedBird.id}`);\r\n\r\n    if(roll === 6) {\r\n      card.classList.add(\"flyToScore\");\r\n      this.props.scoreBird(this.props.selectedBird, BYcards);\r\n      this.props.selectBirdAgain();\r\n    } else if(roll >= 4-bonus){\r\n      card.classList.add(\"flyToScore\");\r\n      this.props.scoreBird(this.props.selectedBird, BYcards);\r\n      this.props.nextPhase();\r\n    } else {\r\n      card.classList.remove('selected');\r\n      this.props.selectBird(null);\r\n      this.props.nextPhase();\r\n    }\r\n  }\r\n\r\n  gatherBYcards = () => {\r\n    // checks the backyard for the first card that matches the bird's need\r\n    // if there are undefined values, pass through again looking for a second copy of the first need\r\n    // the filter removes 'undefined' from the array when no backyard card matches the need\r\n    const BYcopy = [...this.props.backyard]\r\n    const BYcards = []\r\n    \r\n    let passThrough = () => {\r\n      this.props.selectedBird.habitat.forEach(need =>{\r\n        let matchingCard = BYcopy.find(by => by.type === need)\r\n        if(!!matchingCard){\r\n          BYcards.push(BYcopy.splice(BYcopy.indexOf(matchingCard), 1)[0])\r\n        }\r\n      })\r\n    }\r\n\r\n    passThrough();\r\n    if (BYcards.length < 2) {passThrough()}\r\n\r\n    return BYcards;\r\n  }\r\n\r\n  setBonus = BYcards => {\r\n    if (BYcards.length === 1) {\r\n      return 0;\r\n    } else if (BYcards[0].type === BYcards[1].type) {\r\n      return 1;\r\n    } else {\r\n      return 2;\r\n    }\r\n  }\r\n\r\n  flightCheck = async roll => {\r\n    this.props.flock.forEach(async bird => {\r\n      if (bird.flightNums.includes(roll)) {\r\n        await this.sleep(150);\r\n        const birdElem = document.getElementById(`bird-${bird.id}`)\r\n        birdElem.style.setProperty('--flightAngle', `${Math.random()*600 - 300}%`)\r\n        birdElem.classList.add(\"flyAway\");\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div id=\"dice\">\r\n        <ReactDice\r\n          numDice={1}\r\n          rollDone={this.rollDone}\r\n          ref={dice => this.reactDice = dice}\r\n          outline={true}\r\n          faceColor=\"#FFF\"\r\n          dotColor=\"#000\"\r\n        /> \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    selectedBird: state.game.selectedBird,\r\n    backyard: state.player.backyard,\r\n    phase: state.game.phase,\r\n    flock: state.flock\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    nextPhase: () => dispatch(nextPhase()),\r\n    selectBirdAgain: () => dispatch(selectBirdAgain()),\r\n    toggleDice: () => dispatch(toggleDice()),\r\n    scoreBird: (bird, BYcards) => dispatch(scoreBird(bird, BYcards)),\r\n    selectBird: bird => dispatch(selectBird(bird))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dice);","export function toggleHand() {\r\n  return {type:\"TOGGLE_HAND\"};\r\n}\r\n\r\nexport function playBYcards(cards) {\r\n  return {type:\"PLAY_BACKYARD_CARDS\", cards};\r\n} \r\n\r\nexport function scoreBird(bird, BYcards) {\r\n  return (dispatch, getState) => {\r\n    const wholeState = getState();\r\n    dispatch({\r\n      type: \"SCORE_BIRD\",\r\n      payload: {\r\n        bird,\r\n        BYcards,\r\n        score: wholeState.game.season.points[bird.season]\r\n      }\r\n    })\r\n  }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SeasonCard from '../components/cards/seasonCard';\r\nimport CardBack from '../components/cards/CardBack'\r\nimport { seasonCards } from '../cards/allSeasonCards';\r\nimport { cardBacks } from '../cards/allCardBacks';\r\nimport { drawBird } from '../actions/FlockActions';\r\nimport { drawBYcard } from '../actions/HandActions';\r\nimport { nextPhase, skipBirdDraw } from '../actions/GameActions';\r\nimport { toggleHand } from '../actions/PlayerActions';\r\nimport Instructions from '../components/Instructions';\r\nimport Dice from '../components/Dice';\r\n\r\nclass Decks extends React.Component {\r\n  state = {\r\n    birdDeckEnabled: true\r\n  }\r\n\r\n  sleep = ms => {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.game.phase === \"drawBirds\"\r\n        && this.props.birdDeck.length === 0\r\n        && this.state.birdDeckEnabled) {\r\n      this.setState({birdDeckEnabled : false})\r\n    } else if (this.props.game.phase === \"drawBirds\"\r\n        && this.props.birdDeck.length === 0) {\r\n      this.props.skipBirdDraw();\r\n    }\r\n  }\r\n\r\n  handleClick = async (e) => {\r\n    if (this.props.game.phase === \"drawBirds\" && e.target.getAttribute('name') === \"birdDeck\"){\r\n      this.props.drawBird();\r\n      await this.sleep(150)\r\n      this.props.drawBird();\r\n      if (this.props.game.phase === \"drawBirds\") {\r\n        this.props.nextPhase();\r\n      }\r\n    } else if (this.props.game.phase === \"drawBYcards\" && e.target.getAttribute('name') === \"backyardDeck\") {\r\n      this.props.toggleHand();\r\n      this.props.drawBYcard();\r\n      this.props.drawBYcard();\r\n      this.props.nextPhase();\r\n    }\r\n  }\r\n\r\n  // TODO is this needed?\r\n  rollDone = () => {\r\n\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"top-level-container\" id=\"decks\">\r\n        <Instructions phase={this.props.game.phase}/>\r\n        <CardBack\r\n          card={cardBacks.bird}\r\n          handleClick={this.handleClick}\r\n          enabled={this.state.birdDeckEnabled}\r\n        />\r\n        <SeasonCard card={seasonCards.find(c => c.id === this.props.game.season.id)}/>\r\n        <CardBack\r\n          card={cardBacks.backyard}\r\n          handleClick={this.handleClick}\r\n          enabled={true}\r\n        />\r\n        {this.props.game.diceVisible ? <Dice rollDone={this.rollDone} /> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n  return {\r\n    game: state.game,\r\n    flock: state.flock,\r\n    birdDeck: state.decks.bird\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    drawBird: () => dispatch(drawBird()),\r\n    nextPhase: () => dispatch(nextPhase()),\r\n    drawBYcard: () => dispatch(drawBYcard()),\r\n    toggleHand: () => dispatch(toggleHand()),\r\n    skipBirdDraw: () => dispatch(skipBirdDraw())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Decks);","import React from 'react';\r\nimport './cards.css'\r\n\r\nconst BackyardCard = props => {\r\n  return(\r\n    <img\r\n      src={props.card.src}\r\n      alt=\"backyard\"\r\n      className=\"card\"\r\n      onClick={e => props.handleClick(e, props.card)}\r\n    />\r\n  );\r\n}\r\n\r\nexport default BackyardCard;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport BackyardCard from '../components/cards/backyardCard';\r\nimport { playBYcards } from '../actions/PlayerActions'\r\nimport { toggleHand } from '../actions/PlayerActions'\r\nimport { nextPhase } from '../actions/GameActions'\r\n\r\nclass Hand extends React.Component {\r\n  state = {\r\n    selectedCards: []\r\n  }\r\n\r\n  handleClick = (e, card) => {\r\n    // unselect card if it is already selected\r\n    if(this.state.selectedCards.includes(card)) {\r\n      e.target.classList.remove('selected');\r\n      this.setState({\r\n        selectedCards: [...this.state.selectedCards.filter(c => c !== card)]\r\n      })\r\n    } else {\r\n      // otherwise add it to selected cards\r\n      e.target.classList.add('selected');\r\n      this.setState({\r\n        selectedCards: [...this.state.selectedCards, card]\r\n      }, () => {\r\n        // and if there are two selected cards, play them\r\n        if (this.state.selectedCards.length === 2){\r\n          this.moveTheCards();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  moveTheCards = () => {\r\n    this.props.playBYcards(this.state.selectedCards);\r\n    this.setState({\r\n      selectedCards: []\r\n    })\r\n    // add the slideDown class to make the hand slide down out of site, where it will hit the animationEnd function and be hidden\r\n    document.getElementById('hand').classList.add(\"slideDown\");\r\n  }\r\n\r\n  handleAnimationEnd = e => {\r\n    if (e.target.classList.contains(\"slideDown\")){\r\n      e.target.classList.remove(\"slideDown\");\r\n      this.props.toggleHand();\r\n      this.props.nextPhase();\r\n    }\r\n  }\r\n\r\n  renderBYcards(){\r\n    return this.props.hand.map((card, i) => {\r\n      return <BackyardCard card={card} key ={i} handleClick={this.handleClick} />\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"hand\" id=\"hand\" onAnimationEnd={this.handleAnimationEnd} >\r\n        {this.renderBYcards()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {hand: state.player.hand}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    playBYcards: cards => dispatch(playBYcards(cards)),\r\n    toggleHand: () => dispatch(toggleHand()),\r\n    nextPhase: () => dispatch(nextPhase())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Hand);","import React from 'react';\r\n\r\nconst Score = props => {\r\n  return(\r\n    <p id=\"score\">\r\n      Score: {props.score}\r\n    </p>\r\n  );\r\n}\r\n\r\nexport default Score;","import React from 'react';\r\nimport BackyardCard from '../components/cards/backyardCard';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Backyard extends React.Component {\r\n  //this does nothing so the backyard cards in the backyard do nothing (as opposed to the hand)\r\n  handleClick = () => {}\r\n\r\n  renderBYcards(){\r\n    return this.props.backyard.map((card, i) => {\r\n      return <BackyardCard card={card} key ={i} handleClick={this.handleClick} />\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"backyard\" id=\"backyard\">\r\n        {this.renderBYcards()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n  \r\nconst mapStateToProps = state => {\r\n  return {\r\n    player: state.player,\r\n    backyard: state.player.backyard\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Backyard);","import React from 'react';\r\nimport Hand from './Hand';\r\nimport Score from '../components/Score';\r\nimport Backyard from './Backyard';\r\nimport { connect } from 'react-redux';\r\nimport { toggleHand } from '../actions/PlayerActions'\r\n\r\nclass PlayerArea extends React.Component {\r\n  render(){\r\n    return (\r\n      <div className=\"top-level-container\" id=\"playerArea\">\r\n        {this.props.handVisible ? <Hand /> : null }\r\n        <Backyard />\r\n        <Score score={this.props.score} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    handVisible: state.player.handVisible,\r\n    score: state.player.score\r\n  }\r\n}\r\n\r\nconst mapDisptachToProps = dispatch => {\r\n  return {\r\n    toggleHand: () => dispatch(toggleHand())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDisptachToProps)(PlayerArea);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Flock from './Flock';\r\nimport Decks from './Decks';\r\nimport PlayerArea from './PlayerArea';\r\nimport './Game.css';\r\nimport { showDice, gameOver } from '../actions/GameActions';\r\n\r\nclass Game extends React.Component {\r\n  componentDidUpdate(){\r\n    if (this.props.birdDeck.length === 0\r\n        && this.props.flock.length === 0){\r\n    //GAME OVER\r\n      this.props.gameOver()\r\n        .then(() => this.props.history.push('/game_over'));\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <Decks/>\r\n        <Flock />\r\n        <PlayerArea />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>{\r\n  return {\r\n    game: state.game,\r\n    birdDeck: state.decks.bird,\r\n    backyard: state.player.backyard,\r\n    flock: state.flock\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    showDice: () => dispatch(showDice()),\r\n    gameOver: () => dispatch(gameOver())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getGames } from '../actions/GameActions';\r\nimport './high_scores.css'\r\n\r\nclass HighScores extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getGames();\r\n  }\r\n\r\n  renderScores = () => {\r\n    return this.props.games.map(game => {\r\n      return(\r\n        <li key={game.id} ><strong>{game.player}</strong> -- {game.season} -- {game.score}</li>\r\n      )\r\n    })\r\n  }\r\n\r\n  render(){\r\n    if (this.props.loading){return \"...Loading high scores...\"}\r\n    return(\r\n      <div id=\"scores\">\r\n        <h2>High Scores:</h2>\r\n        <ol>\r\n          {this.renderScores()}\r\n        </ol>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    games: state.pastScores.games,\r\n    loading: state.pastScores.loading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {getGames: () => dispatch(getGames())}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HighScores);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport HighScores from './HighScores'\r\n\r\nclass GameOver extends React.Component {\r\n  render(){\r\n    return(\r\n      <div id=\"gameOver\">\r\n        <h2>Game Over!</h2>\r\n        You scored: {this.props.score} points!<br />\r\n        <a href=\"/\">Play again?</a>\r\n        <hr />\r\n        <HighScores />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    score: state.player.score\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(GameOver);","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport NewGame from './components/NewGame';\nimport Game from './containers/Game';\nimport GameOver from './components/GameOver';\nimport HighScores from './components/HighScores';\n\n\nclass App extends React.Component {\n  render(){\n    return (\n      <div className=\"App\">\n        <Router>\n          <Route exact path='/' component={NewGame} />\n          <Route path='/game' component={Game} />\n          <Route path='/game_over' component={GameOver} />\n          <Route path='/high_scores' component={HighScores} />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const phases = [\"drawBirds\", \"drawBYcards\", \"playBYcards\", \"chooseBird\", \"attractBird\", \"flightRoll\"]\r\n\r\nconst initState = {\r\n  season: {},\r\n  phase: phases[0],\r\n  selectedBird: null,\r\n  diceVisible: false\r\n}\r\n\r\nfunction GameReducer(state = initState, action){\r\n  switch(action.type){\r\n    case \"START_GAME\":\r\n      return Object.assign({}, state, action.payload);\r\n    case \"NEXT_PHASE\":\r\n      let newPhaseNum = phases.indexOf(state.phase) + 1 > 5 ? 0 :phases.indexOf(state.phase) + 1;\r\n      let newPhase = phases[newPhaseNum];\r\n      return Object.assign({}, state, {phase: newPhase});\r\n    case \"SELECT_BIRD\":\r\n      return Object.assign({}, state, {selectedBird: action.bird});\r\n    case \"TOGGLE_DICE\":\r\n      return Object.assign({}, state, {diceVisible: !state.diceVisible});\r\n    case \"SHOW_DICE\":\r\n      return Object.assign({}, state, {diceVisible: true});\r\n    case \"SET_PHASE\":\r\n      return Object.assign({}, state, {phase: phases[action.phase]});\r\n    case \"RESET_GAME\":\r\n      return initState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default GameReducer","function FlockReducer(state = [], action){\r\n  switch(action.type){\r\n    case \"DRAW_BIRD\":\r\n      // add the bird in the 0 index from the bird deck to the flock\r\n      return [...state, action.newBird]\r\n    case \"REMOVE_BIRD\":\r\n      const newFlock = [...state]\r\n      newFlock.splice(state.indexOf(action.bird),1);\r\n      return newFlock;\r\n    case \"RESET_GAME\":\r\n        return [];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default FlockReducer","import {birds} from \"../images/allImages\";\r\n\r\nexport const birdCards = [\r\n  { id: 0, src: birds[\"americanCoot.png\"], name: \"American Coot\", flightNums: [1, 2], season: \"winter\", habitat: [\"wetland\", \"wildGrass\"] },\r\n  { id: 1, src: birds[\"americanCrow.png\"], name: \"American Crow\", flightNums: [3, 4], season: \"any\", habitat: [\"nuts\", \"lawn\"] },\r\n  { id: 2, src: birds[\"americanGoldfinch.png\"], name: \"American Goldfinch\", flightNums: [5, 6], season: \"spring\", habitat: [\"seeds\", \"trees\"] },\r\n  { id: 3, src: birds[\"americanRobin.png\"], name: \"American Robin\", flightNums: [1, 2], season: \"spring\", habitat: [\"insects\", \"lawn\"] },\r\n  { id: 4, src: birds[\"americanWigeon.png\"], name: \"American Wigeon\", flightNums: [3,4], season: \"autumn\", habitat: [\"runningWater\", \"wildGrass\"] },\r\n  { id: 5, src: birds[\"annasHummingbird.png\"], name: \"Anna's Hummingbird\", flightNums: [5,6], season: \"any\", habitat: [\"trees\", \"bushesAndFlowers\"] },\r\n  { id: 6, src: birds[\"bandTailedPigeon.png\"], name: \"Band-Tailed Pigeon\", flightNums: [1,2], season: \"summer\", habitat: [\"trees\", \"nuts\"] },\r\n  { id: 7, src: birds[\"beltedKingfisher.png\"], name: \"Belted Kingfisher\", flightNums: [3,4], season: \"autumn\", habitat: [\"fish\", \"wetland\"] },\r\n  { id: 8, src: birds[\"bewicksWren.png\"], name: \"Bewick's Wren\", flightNums: [5,6], season: \"autumn\", habitat: [\"seeds\", \"trees\"] },\r\n  { id: 9, src: birds[\"bewicksWren.png\"], name: \"Bewick's Wren\", flightNums: [5,6], season: \"autumn\", habitat: [\"seeds\", \"trees\"] },\r\n  { id: 10, src: birds[\"blackCappedChickadee.png\"], name: \"Black-Capped Chickadee\", flightNums: [1,2], season: \"any\", habitat: [\"nuts\", \"trees\"] },\r\n  { id: 11, src: birds[\"bufflehead.png\"], name: \"Bufflehead\", flightNums: [3,4], season: \"winter\", habitat: [\"runningWater\", \"wildGrass\"] },\r\n  { id: 12, src: birds[\"bushtit.png\"], name: \"Bushtit\", flightNums: [5,6], season: \"winter\", habitat: [\"insects\", \"trees\"] },\r\n  { id: 13, src: birds[\"canadaGoose.png\"], name: \"Canada Goose\", flightNums: [1,2], season: \"any\", habitat: [\"insects\", \"wetland\"] },\r\n  { id: 14, src: birds[\"darkEyedJunco.png\"], name: \"Dark Eyed Junco\", flightNums: [5,6], season: \"any\", habitat: [\"seeds\", \"bushesAndFlowers\"] },\r\n  { id: 15, src: birds[\"doubleCrestedCormorant.png\"], name: \"Double-Crested Cormorant\", flightNums: [1,2], season: \"spring\", habitat: [\"fish\", \"wetland\"] },\r\n  { id: 16, src: birds[\"gadwall.png\"], name: \"Gadwall\", flightNums: [3,4], season: \"autumn\", habitat: [\"runningWater\", \"wildGrass\"] },\r\n  { id: 17, src: birds[\"goldenCrownedSparrow.png\"], name: \"Golden-Crowned Sparrow\", flightNums: [5,6], season: \"winter\", habitat: [\"seeds\", \"bushesAndFlowers\"] },\r\n  { id: 18, src: birds[\"greatBlueHeron.png\"], name: \"Great Blue Heron\", flightNums: [1,2], season: \"summer\", habitat: [\"fish\", \"wetland\"] },\r\n  { id: 19, src: birds[\"greenHeron.png\"], name: \"Green Heron\", flightNums: [3,4], season: \"spring\", habitat: [\"fish\", \"runningWater\"] },\r\n  { id: 20, src: birds[\"greenWingedTeal.png\"], name: \"Green-Winged Teal\", flightNums: [5,6], season: \"autumn\", habitat: [\"runningWater\", \"wildGrass\"] },\r\n  { id: 21, src: birds[\"hoodedMerganser.png\"], name: \"Hooded Merganser\", flightNums: [1,2], season: \"autumn\", habitat: [\"runningWater\", \"fish\"] },\r\n  { id: 22, src: birds[\"houseFinch.png\"], name: \"House Finch\", flightNums: [3,4], season: \"winter\", habitat: [\"nuts\", \"bushesAndFlowers\"] },\r\n  { id: 23, src: birds[\"killdeer.png\"], name: \"Killdeer\", flightNums: [5,6], season: \"spring\", habitat: [\"insects\", \"lawn\"] },\r\n  { id: 24, src: birds[\"mallard.png\"], name: \"Mallard\", flightNums: [1,2], season: \"any\", habitat: [\"wetland\", \"wildGrass\"] },\r\n  { id: 25, src: birds[\"mourningDove.png\"], name: \"Mourning Dove\", flightNums: [3,4], season: \"summer\", habitat: [\"nuts\", \"lawn\"] },\r\n  { id: 26, src: birds[\"northernFlicker.png\"], name: \"Northern Flicker\", flightNums: [5,6], season: \"spring\", habitat: [\"insects\", \"lawn\"] },\r\n  { id: 27, src: birds[\"piedBilledGrebe.png\"], name: \"Pied-Billed Grebe\", flightNums: [1,2], season: \"winter\", habitat: [\"fish\", \"runningWater\"] },\r\n  { id: 28, src: birds[\"pileatedWoodpecker.png\"], name: \"Pileated Woodpecker\", flightNums: [3,4], season: \"summer\", habitat: [\"insects\", \"trees\"] },\r\n  { id: 29, src: birds[\"redBreastedNuthatch.png\"], name: \"Red-Breasted Nuthatch\", flightNums: [5,6], season: \"winter\", habitat: [\"nuts\", \"trees\"] },\r\n  { id: 30, src: birds[\"redWingedBlackbird.png\"], name: \"Red-Winged Blackbird\", flightNums: [1,2], season: \"spring\", habitat: [\"insects\", \"wetland\"] },\r\n  { id: 31, src: birds[\"rubyCrownedKinglet.png\"], name: \"Ruby-Crowned Kinglet\", flightNums: [3,4], season: \"summer\", habitat: [\"insects\", \"trees\"] },\r\n  { id: 32, src: birds[\"rufousHummingbird.png\"], name: \"Rufous Hummingbird\", flightNums: [5,6], season: \"spring\", habitat: [\"trees\", \"bushesAndFlowers\"] },\r\n  { id: 33, src: birds[\"songSparrow.png\"], name: \"Song Sparrow\", flightNums: [1,2], season: \"any\", habitat: [\"seeds\", \"bushesAndFlowers\"] },\r\n  { id: 34, src: birds[\"spottedTowhee.png\"], name: \"Spotted Towhee\", flightNums: [3,4], season: \"summer\", habitat: [\"seeds\", \"bushesAndFlowers\"] },\r\n  { id: 35, src: birds[\"stellersJay.png\"], name: \"Steller's Jay\", flightNums: [5,6], season: \"any\", habitat: [\"nuts\", \"lawn\"] },\r\n  { id: 36, src: birds[\"variedThrush.png\"], name: \"Varied Thrush\", flightNums: [3,4], season: \"winter\", habitat: [\"seeds\", \"lawn\"] },\r\n  { id: 37, src: birds[\"whiteCrownedSparrow.png\"], name: \"White-Crowned Sparrow\", flightNums: [5,6], season: \"spring\", habitat: [\"seeds\", \"bushesAndFlowers\"] },\r\n  { id: 38, src: birds[\"woodDuck.png\"], name: \"Wood Duck\", flightNums: [1,2], season: \"spring\", habitat: [\"wetland\", \"wildGrass\"] }\r\n];","import {backyards} from '../images/allImages';\r\n\r\ndelete backyards[\"backyardCardBack.png\"]\r\n\r\nconst backyardCards = Object.getOwnPropertyNames(backyards).map((filename, i) => {\r\n  return {\r\n    src: backyards[filename],\r\n    type: filename.replace('.png','')\r\n  };\r\n});\r\n\r\nexport let initBackyardDeck;\r\n\r\n// fill the array with 5 copies of each card\r\ninitBackyardDeck = new Array(50);\r\nfor(let i = 0; i < 10; i++){\r\n  initBackyardDeck.fill(backyardCards[i], i*5, (i+1)*5)\r\n}\r\n\r\n// assign a unique id to each card\r\ninitBackyardDeck.forEach(function(card, index) {\r\n  this[index] = Object.assign({}, card, {id: index});\r\n}, initBackyardDeck);","import {birdCards} from '../cards/allBirdCards'\r\nimport {initBackyardDeck} from '../cards/allBackyardCards'\r\n\r\n\r\n// this Fisher-Yates shuffle function is taken from\r\n// https://gomakethings.com/how-to-shuffle-an-array-with-vanilla-js/\r\nlet shuffle = function (array) {\r\n\r\n\tlet currentIndex = array.length;\r\n\tlet temporaryValue, randomIndex;\r\n\r\n\t// While there remain elements to shuffle...\r\n\twhile (0 !== currentIndex) {\r\n\t\t// Pick a remaining element...\r\n\t\trandomIndex = Math.floor(Math.random() * currentIndex);\r\n\t\tcurrentIndex -= 1;\r\n\r\n\t\t// And swap it with the current element.\r\n\t\ttemporaryValue = array[currentIndex];\r\n\t\tarray[currentIndex] = array[randomIndex];\r\n\t\tarray[randomIndex] = temporaryValue;\r\n\t}\r\n\r\n\treturn array;\r\n};\r\n\r\n// bird: shuffle([...birdCards]).slice(0,birdCards.length/4+1),\r\nconst initState = {\r\n\tbird: shuffle([...birdCards]).slice(0,2),\r\n  backyard: shuffle([...initBackyardDeck])\r\n}\r\n\r\nfunction DecksReducer(state = initState, action){\r\n  switch(action.type){\r\n    case \"DRAW_BIRD\":\r\n\t\t\t// remove the 0 indexed card, it is added to the flock in FlockReducer\r\n      return Object.assign({}, state, {bird: state.bird.slice(1)})\r\n\t\tcase \"DRAW_BACKYARD_CARD\":\r\n\t\t\t\t// remove the 0 indexed card, it is added to the hand in PlayerReducer\r\n\t\t\t\treturn Object.assign({}, state, {backyard: state.backyard.slice(1)})\r\n\t\tcase \"RESET_GAME\":\r\n\t\t\treturn initState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default DecksReducer\r\n\r\n","const initState = {\r\n  playerName: \"Unknown Birder\",\r\n  score: 0,\r\n  hand: [],\r\n  backyard: [],\r\n  handVisible: false\r\n}\r\n\r\nfunction PlayerReducer(state = initState, action){\r\n  switch(action.type){\r\n    case \"START_GAME\":\r\n      return Object.assign(\r\n        {},\r\n        state,\r\n        {playerName: action.payload.playerName}\r\n      )\r\n\r\n    case \"DRAW_BACKYARD_CARD\":\r\n      // add the BY card in the 0 index from the deck to the hand\r\n      const newSortedHand = [...state.hand, action.newBYcard].sort((a,b) => a.id-b.id)\r\n\r\n      return Object.assign(\r\n        {},\r\n        state,\r\n        {hand: newSortedHand}\r\n      )\r\n\r\n    case \"TOGGLE_HAND\":\r\n      return Object.assign({}, state, {handVisible: !state.handVisible})\r\n\r\n    case \"PLAY_BACKYARD_CARDS\":\r\n      // hand with the selected cards filtered out\r\n      const newHand = state.hand.filter(c => c.id !== action.cards[0].id && c.id !== action.cards[1].id)\r\n\r\n      return Object.assign({}, state, {\r\n        backyard: [...state.backyard, ...action.cards].sort((a,b) => a.id-b.id),\r\n        hand: newHand\r\n      })\r\n    \r\n    case \"SCORE_BIRD\":\r\n      const newBY = state.backyard\r\n      action.payload.BYcards.forEach(by => {\r\n        newBY.splice(newBY.indexOf(by),1);\r\n      })\r\n      return Object.assign(\r\n        {},\r\n        state,\r\n        {score: state.score + action.payload.score},\r\n        {backyard: newBY}\r\n      );\r\n    case \"RESET_GAME\":\r\n      return initState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default PlayerReducer","function PastScoresReducer(state = {\r\n  loading: false,\r\n  games: []\r\n}, action){\r\n  switch(action.type){\r\n    case \"LOADING_SCORES\":\r\n      return {...state, loading: true}\r\n    case \"SET_SCORES\":\r\n      return {loading: false, games: action.payload}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default PastScoresReducer;","import GameReducer from './GameReducer';\r\nimport FlockReducer from './FlockReducer';\r\nimport DecksReducer from './DecksReducer';\r\nimport PlayerReducer from './PlayerReducer';\r\nimport PastScoresReducer from './PastScoresReducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n  game: GameReducer,\r\n  flock: FlockReducer,\r\n  decks: DecksReducer,\r\n  player: PlayerReducer,\r\n  pastScores: PastScoresReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/rootReducer'\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(<Provider store={store} ><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}